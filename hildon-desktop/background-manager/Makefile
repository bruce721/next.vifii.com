# Makefile.in generated by automake 1.7.9 from Makefile.am.
# background-manager/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/hildon-desktop
pkglibdir = $(libdir)/hildon-desktop
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /home/bruce/bin/install-check
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu

pkgincludedir = $(includedir)/libhildondesktop/libhildondesktop
ACLOCAL = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run aclocal-1.7
ALL_LINGUAS = en_GB
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run automake-1.7
AWK = mawk
CATALOGS =  en_GB.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wmissing-prototypes -Wmissing-declarations -Wno-format-extra-args
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DBUS_BINDING_TOOL = /usr/bin/dbus-binding-tool
DBUS_GLIB_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
DBUS_GLIB_LIBS = -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lglib-2.0  
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_GTK_DOC_FALSE = 
ENABLE_GTK_DOC_TRUE = #
EXEEXT = 
F77 = 
FFLAGS = 
GCONF_CFLAGS = -DORBIT2=1 -pthread -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GCONF_LIBS = -lgconf-2 -lglib-2.0  
GDK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/cairo -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
GDK_LIBS = -lgdk-x11-2.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
GLIB_GENMARSHAL = /usr/bin/glib-genmarshal
GMOFILES =  en_GB.gmo
GMSGFMT = /usr/bin/msgfmt
GNOME_VFS_CFLAGS = -pthread -DORBIT2=1 -I/usr/include/gnome-vfs-2.0 -I/usr/lib/gnome-vfs-2.0/include -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GNOME_VFS_LIBS = -pthread -lgnomevfs-2 -lgconf-2 -lgthread-2.0 -lrt -lgmodule-2.0 -ldl -lgobject-2.0 -lglib-2.0  
GREP = /bin/grep
GTKDOC_CHECK = /usr/bin/gtkdoc-check
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
GTK_DOC_USE_LIBTOOL_FALSE = #
GTK_DOC_USE_LIBTOOL_TRUE = 
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
HILDON_BACKGROUND_MANAGER_INTERFACE = org.maemo.hildon.background_manager
HILDON_BACKGROUND_MANAGER_OBJECT_PATH = /org/maemo/hildon/background_manager
HILDON_BACKGROUND_MANAGER_SERVICE = org.maemo.hildon.background_manager
HILDON_CFLAGS = -I/opt/hildon/include/hildon-1 -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
HILDON_FM_CFLAGS = 
HILDON_FM_LIBS = 
HILDON_HELP_CFLAGS = 
HILDON_HELP_LIBS = 
HILDON_LIBS = -L/opt/hildon/lib -lhildon-1 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LDFLAGS = -L/opt/hildon/lib 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML_CFLAGS = -I/usr/include/libxml2  
LIBXML_LIBS = -lxml2  
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run makeinfo
MCE_CFLAGS = 
MCE_LIBS = 
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
NMEDIT = 
OBJEXT = o
OSSOSETTINGS_CFLAGS = 
OSSOSETTINGS_LIBS = 
OSSO_CFLAGS = 
OSSO_LIBS = 
PACKAGE = hildon-desktop
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES =  en_GB.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SQLITE_CFLAGS = 
SQLITE_LIBS = 
STRIP = strip
USE_NLS = yes
VERSION = 2.0.19
XCOMPOSITE_CFLAGS =  
XCOMPOSITE_LIBS = -lXcomposite -lXfixes  
XDAMAGE_CFLAGS =  
XDAMAGE_LIBS = -lXdamage -lXfixes  
XGETTEXT = /usr/bin/xgettext
XLIBS_CFLAGS =  
XLIBS_ERROR_LIBS = 
XLIBS_LIBS = -lX11  
XMKMF = 
XTEST_CFLAGS =  
XTEST_LIBS = -lXtst  
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
hildoncpdesktopentrydir = ${datarootdir}/applications/hildon-control-panel
hildondesktopbackgroundsdir = ${datarootdir}/backgrounds
hildondesktopconfdir = ${prefix}/etc/hildon-desktop
hildondesktopentrydir = ${datarootdir}/applications
hildondesktoplibdir = ${exec_prefix}/lib/hildon-desktop
hildondesktopmenudir = ${prefix}/etc/xdg/menus
hildondesktopstartupdir = ${prefix}/etc/osso-af-init
hildonhomedesktopentrydir = /opt/hildon/share/applications/hildon-home
hildonhomelibdir = ${exec_prefix}/lib/hildon-home
hildonnavigatordesktopentrydir = /opt/hildon/share/applications/hildon-navigator
hildonnavigatorlibdir = ${exec_prefix}/lib/hildon-navigator
hildonpluginloaderlibdir = ${exec_prefix}/lib/hildon-desktop/loaders
hildonstatusbardesktopentrydir = /opt/hildon/share/applications/hildon-status-bar
hildonstatusbarlibdir = ${exec_prefix}/lib/hildon-status-bar
hildonuipolicylibdir = ${exec_prefix}/lib/hildon-desktop/policies
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/bruce/code/hildon/hildon-desktop/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
oldincludedir = /usr/include
pdfdir = ${docdir}
pluginlibdir = ${exec_prefix}/lib/hildon-desktop
prefix = /opt/hildon
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
bin_PROGRAMS = hildon-background-manager
hildon_background_manager_LDADD = \
		$(top_srcdir)/libhildondesktop/libhildondesktop.la


BUILT_SOURCES = background-manager-glue.h hildon-background-manager.h
CLEANFILES = $(BUILT_SOURCES) \
			 background-manager-glue-tmp.h \
			 hildon-background-manager-tmp.h


EXTRA_DIST = background-manager.xml
pkginclude_HEADERS = hildon-background-manager.h

hildon_background_manager_CPPFLAGS = -pthread -DORBIT2=1 -I/usr/include/gnome-vfs-2.0 -I/usr/lib/gnome-vfs-2.0/include -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include   \
				     -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include   \
				      \
				     -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  


hildon_background_manager_LDFLAGS = -pthread -lgnomevfs-2 -lgconf-2 -lgthread-2.0 -lrt -lgmodule-2.0 -ldl -lgobject-2.0 -lglib-2.0   \
				     -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lglib-2.0   \
				      \
				     -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  


hildon_background_manager_SOURCES = $(BUILT_SOURCES) \
				    background-manager.c \
				    background-manager.h \
				    hbm-background.c     \
				    hbm-background.h     \
				    main.c


hildon_background_manager_servicedir = $(datadir)/dbus-1/services
hildon_background_manager_service_DATA = hildon-background-manager.service
subdir = background-manager
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = hildon-background-manager.service \
	background-manager.xml background-manager-dbus.h
bin_PROGRAMS = hildon-background-manager$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am__objects_1 =
am_hildon_background_manager_OBJECTS = $(am__objects_1) \
	hildon_background_manager-background-manager.$(OBJEXT) \
	hildon_background_manager-hbm-background.$(OBJEXT) \
	hildon_background_manager-main.$(OBJEXT)
hildon_background_manager_OBJECTS = \
	$(am_hildon_background_manager_OBJECTS)
hildon_background_manager_DEPENDENCIES = \
	$(top_srcdir)/libhildondesktop/libhildondesktop.la

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = \
	./$(DEPDIR)/hildon_background_manager-background-manager.Po \
	./$(DEPDIR)/hildon_background_manager-hbm-background.Po \
	./$(DEPDIR)/hildon_background_manager-main.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(hildon_background_manager_SOURCES)
DATA = $(hildon_background_manager_service_DATA)

HEADERS = $(pkginclude_HEADERS)

DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)/Makefile.in Makefile.am \
	background-manager-dbus.h.in background-manager.xml.in \
	hildon-background-manager.service.in
SOURCES = $(hildon_background_manager_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  background-manager/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
hildon-background-manager.service: $(top_builddir)/config.status hildon-background-manager.service.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
background-manager.xml: $(top_builddir)/config.status background-manager.xml.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
background-manager-dbus.h: $(top_builddir)/config.status background-manager-dbus.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
hildon-background-manager$(EXEEXT): $(hildon_background_manager_OBJECTS) $(hildon_background_manager_DEPENDENCIES) 
	@rm -f hildon-background-manager$(EXEEXT)
	$(LINK) $(hildon_background_manager_LDFLAGS) $(hildon_background_manager_OBJECTS) $(hildon_background_manager_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/hildon_background_manager-background-manager.Po
include ./$(DEPDIR)/hildon_background_manager-hbm-background.Po
include ./$(DEPDIR)/hildon_background_manager-main.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

hildon_background_manager-background-manager.o: background-manager.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_background_manager-background-manager.o -MD -MP -MF "$(DEPDIR)/hildon_background_manager-background-manager.Tpo" \
	  -c -o hildon_background_manager-background-manager.o `test -f 'background-manager.c' || echo '$(srcdir)/'`background-manager.c; \
	then mv -f "$(DEPDIR)/hildon_background_manager-background-manager.Tpo" "$(DEPDIR)/hildon_background_manager-background-manager.Po"; \
	else rm -f "$(DEPDIR)/hildon_background_manager-background-manager.Tpo"; exit 1; \
	fi
#	source='background-manager.c' object='hildon_background_manager-background-manager.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_background_manager-background-manager.Po' tmpdepfile='$(DEPDIR)/hildon_background_manager-background-manager.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_background_manager-background-manager.o `test -f 'background-manager.c' || echo '$(srcdir)/'`background-manager.c

hildon_background_manager-background-manager.obj: background-manager.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_background_manager-background-manager.obj -MD -MP -MF "$(DEPDIR)/hildon_background_manager-background-manager.Tpo" \
	  -c -o hildon_background_manager-background-manager.obj `if test -f 'background-manager.c'; then $(CYGPATH_W) 'background-manager.c'; else $(CYGPATH_W) '$(srcdir)/background-manager.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_background_manager-background-manager.Tpo" "$(DEPDIR)/hildon_background_manager-background-manager.Po"; \
	else rm -f "$(DEPDIR)/hildon_background_manager-background-manager.Tpo"; exit 1; \
	fi
#	source='background-manager.c' object='hildon_background_manager-background-manager.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_background_manager-background-manager.Po' tmpdepfile='$(DEPDIR)/hildon_background_manager-background-manager.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_background_manager-background-manager.obj `if test -f 'background-manager.c'; then $(CYGPATH_W) 'background-manager.c'; else $(CYGPATH_W) '$(srcdir)/background-manager.c'; fi`

hildon_background_manager-background-manager.lo: background-manager.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_background_manager-background-manager.lo -MD -MP -MF "$(DEPDIR)/hildon_background_manager-background-manager.Tpo" \
	  -c -o hildon_background_manager-background-manager.lo `test -f 'background-manager.c' || echo '$(srcdir)/'`background-manager.c; \
	then mv -f "$(DEPDIR)/hildon_background_manager-background-manager.Tpo" "$(DEPDIR)/hildon_background_manager-background-manager.Plo"; \
	else rm -f "$(DEPDIR)/hildon_background_manager-background-manager.Tpo"; exit 1; \
	fi
#	source='background-manager.c' object='hildon_background_manager-background-manager.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_background_manager-background-manager.Plo' tmpdepfile='$(DEPDIR)/hildon_background_manager-background-manager.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_background_manager-background-manager.lo `test -f 'background-manager.c' || echo '$(srcdir)/'`background-manager.c

hildon_background_manager-hbm-background.o: hbm-background.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_background_manager-hbm-background.o -MD -MP -MF "$(DEPDIR)/hildon_background_manager-hbm-background.Tpo" \
	  -c -o hildon_background_manager-hbm-background.o `test -f 'hbm-background.c' || echo '$(srcdir)/'`hbm-background.c; \
	then mv -f "$(DEPDIR)/hildon_background_manager-hbm-background.Tpo" "$(DEPDIR)/hildon_background_manager-hbm-background.Po"; \
	else rm -f "$(DEPDIR)/hildon_background_manager-hbm-background.Tpo"; exit 1; \
	fi
#	source='hbm-background.c' object='hildon_background_manager-hbm-background.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_background_manager-hbm-background.Po' tmpdepfile='$(DEPDIR)/hildon_background_manager-hbm-background.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_background_manager-hbm-background.o `test -f 'hbm-background.c' || echo '$(srcdir)/'`hbm-background.c

hildon_background_manager-hbm-background.obj: hbm-background.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_background_manager-hbm-background.obj -MD -MP -MF "$(DEPDIR)/hildon_background_manager-hbm-background.Tpo" \
	  -c -o hildon_background_manager-hbm-background.obj `if test -f 'hbm-background.c'; then $(CYGPATH_W) 'hbm-background.c'; else $(CYGPATH_W) '$(srcdir)/hbm-background.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_background_manager-hbm-background.Tpo" "$(DEPDIR)/hildon_background_manager-hbm-background.Po"; \
	else rm -f "$(DEPDIR)/hildon_background_manager-hbm-background.Tpo"; exit 1; \
	fi
#	source='hbm-background.c' object='hildon_background_manager-hbm-background.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_background_manager-hbm-background.Po' tmpdepfile='$(DEPDIR)/hildon_background_manager-hbm-background.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_background_manager-hbm-background.obj `if test -f 'hbm-background.c'; then $(CYGPATH_W) 'hbm-background.c'; else $(CYGPATH_W) '$(srcdir)/hbm-background.c'; fi`

hildon_background_manager-hbm-background.lo: hbm-background.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_background_manager-hbm-background.lo -MD -MP -MF "$(DEPDIR)/hildon_background_manager-hbm-background.Tpo" \
	  -c -o hildon_background_manager-hbm-background.lo `test -f 'hbm-background.c' || echo '$(srcdir)/'`hbm-background.c; \
	then mv -f "$(DEPDIR)/hildon_background_manager-hbm-background.Tpo" "$(DEPDIR)/hildon_background_manager-hbm-background.Plo"; \
	else rm -f "$(DEPDIR)/hildon_background_manager-hbm-background.Tpo"; exit 1; \
	fi
#	source='hbm-background.c' object='hildon_background_manager-hbm-background.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_background_manager-hbm-background.Plo' tmpdepfile='$(DEPDIR)/hildon_background_manager-hbm-background.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_background_manager-hbm-background.lo `test -f 'hbm-background.c' || echo '$(srcdir)/'`hbm-background.c

hildon_background_manager-main.o: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_background_manager-main.o -MD -MP -MF "$(DEPDIR)/hildon_background_manager-main.Tpo" \
	  -c -o hildon_background_manager-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
	then mv -f "$(DEPDIR)/hildon_background_manager-main.Tpo" "$(DEPDIR)/hildon_background_manager-main.Po"; \
	else rm -f "$(DEPDIR)/hildon_background_manager-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='hildon_background_manager-main.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_background_manager-main.Po' tmpdepfile='$(DEPDIR)/hildon_background_manager-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_background_manager-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

hildon_background_manager-main.obj: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_background_manager-main.obj -MD -MP -MF "$(DEPDIR)/hildon_background_manager-main.Tpo" \
	  -c -o hildon_background_manager-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_background_manager-main.Tpo" "$(DEPDIR)/hildon_background_manager-main.Po"; \
	else rm -f "$(DEPDIR)/hildon_background_manager-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='hildon_background_manager-main.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_background_manager-main.Po' tmpdepfile='$(DEPDIR)/hildon_background_manager-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_background_manager-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

hildon_background_manager-main.lo: main.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_background_manager-main.lo -MD -MP -MF "$(DEPDIR)/hildon_background_manager-main.Tpo" \
	  -c -o hildon_background_manager-main.lo `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
	then mv -f "$(DEPDIR)/hildon_background_manager-main.Tpo" "$(DEPDIR)/hildon_background_manager-main.Plo"; \
	else rm -f "$(DEPDIR)/hildon_background_manager-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='hildon_background_manager-main.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_background_manager-main.Plo' tmpdepfile='$(DEPDIR)/hildon_background_manager-main.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_background_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_background_manager-main.lo `test -f 'main.c' || echo '$(srcdir)/'`main.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
hildon_background_manager_serviceDATA_INSTALL = $(INSTALL_DATA)
install-hildon_background_manager_serviceDATA: $(hildon_background_manager_service_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(hildon_background_manager_servicedir)
	@list='$(hildon_background_manager_service_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(hildon_background_manager_serviceDATA_INSTALL) $$d$$p $(DESTDIR)$(hildon_background_manager_servicedir)/$$f"; \
	  $(hildon_background_manager_serviceDATA_INSTALL) $$d$$p $(DESTDIR)$(hildon_background_manager_servicedir)/$$f; \
	done

uninstall-hildon_background_manager_serviceDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(hildon_background_manager_service_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(hildon_background_manager_servicedir)/$$f"; \
	  rm -f $(DESTDIR)$(hildon_background_manager_servicedir)/$$f; \
	done
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(hildon_background_manager_servicedir) $(DESTDIR)$(pkgincludedir)
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-hildon_background_manager_serviceDATA \
	install-pkgincludeHEADERS

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS \
	uninstall-hildon_background_manager_serviceDATA \
	uninstall-info-am uninstall-pkgincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-hildon_background_manager_serviceDATA install-info \
	install-info-am install-man install-pkgincludeHEADERS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS \
	uninstall-hildon_background_manager_serviceDATA \
	uninstall-info-am uninstall-pkgincludeHEADERS


background-manager-glue.h: background-manager.xml background-manager-dbus.h
	$(LIBTOOL) --mode=execute $(DBUS_BINDING_TOOL) --prefix=background_manager \
		       --mode=glib-server --output=background-manager-glue-tmp.h \
			   background-manager.xml
	cat background-manager-dbus.h background-manager-glue-tmp.h > background-manager-glue.h

hildon-background-manager.h: background-manager.xml background-manager-dbus.h
	$(LIBTOOL) --mode=execute $(DBUS_BINDING_TOOL) --prefix=background_manager \
       --mode=glib-client --output=hildon-background-manager-tmp.h \
			   background-manager.xml
	cat background-manager.h background-manager-dbus.h hildon-background-manager-tmp.h |\
	sed 's/dbus_g_proxy_begin_call/dbus_g_proxy_begin_call_with_timeout/' |\
        sed 's/g_free, /g_free, 120000, /' \
	> hildon-background-manager.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
