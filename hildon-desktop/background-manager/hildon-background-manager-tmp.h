/* Generated by dbus-binding-tool; do not edit! */

#include <glib/gtypes.h>
#include <glib/gerror.h>
#include <dbus/dbus-glib.h>

G_BEGIN_DECLS

#ifndef DBUS_GLIB_CLIENT_WRAPPERS_org_maemo_hildon_background_manager
#define DBUS_GLIB_CLIENT_WRAPPERS_org_maemo_hildon_background_manager

static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_maemo_hildon_background_manager_set_background (DBusGProxy *proxy, const gint IN_picture_id, const gint IN_width, const gint IN_height, const char * IN_filename, const char * IN_cache, const gint IN_mode, GError **error)

{
  return dbus_g_proxy_call (proxy, "SetBackground", error, G_TYPE_INT, IN_picture_id, G_TYPE_INT, IN_width, G_TYPE_INT, IN_height, G_TYPE_STRING, IN_filename, G_TYPE_STRING, IN_cache, G_TYPE_INT, IN_mode, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_maemo_hildon_background_manager_set_background_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_maemo_hildon_background_manager_set_background_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_maemo_hildon_background_manager_set_background_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_maemo_hildon_background_manager_set_background_async (DBusGProxy *proxy, const gint IN_picture_id, const gint IN_width, const gint IN_height, const char * IN_filename, const char * IN_cache, const gint IN_mode, org_maemo_hildon_background_manager_set_background_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SetBackground", org_maemo_hildon_background_manager_set_background_async_callback, stuff, g_free, G_TYPE_INT, IN_picture_id, G_TYPE_INT, IN_width, G_TYPE_INT, IN_height, G_TYPE_STRING, IN_filename, G_TYPE_STRING, IN_cache, G_TYPE_INT, IN_mode, G_TYPE_INVALID);
}
#endif /* defined DBUS_GLIB_CLIENT_WRAPPERS_org_maemo_hildon_background_manager */

G_END_DECLS
