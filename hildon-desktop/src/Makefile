# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/hildon-desktop
pkglibdir = $(libdir)/hildon-desktop
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /home/bruce/bin/install-check
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
pkgincludedir = $(includedir)/hildon-desktop/hildon-desktop
ACLOCAL = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run aclocal-1.7
ALL_LINGUAS = en_GB
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run automake-1.7
AWK = mawk
CATALOGS =  en_GB.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wmissing-prototypes -Wmissing-declarations -Wno-format-extra-args
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DBUS_BINDING_TOOL = /usr/bin/dbus-binding-tool
DBUS_GLIB_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
DBUS_GLIB_LIBS = -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lglib-2.0  
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_GTK_DOC_FALSE = 
ENABLE_GTK_DOC_TRUE = #
EXEEXT = 
F77 = 
FFLAGS = 
GCONF_CFLAGS = -DORBIT2=1 -pthread -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GCONF_LIBS = -lgconf-2 -lglib-2.0  
GDK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/cairo -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
GDK_LIBS = -lgdk-x11-2.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
GLIB_GENMARSHAL = /usr/bin/glib-genmarshal
GMOFILES =  en_GB.gmo
GMSGFMT = /usr/bin/msgfmt
GNOME_VFS_CFLAGS = -pthread -DORBIT2=1 -I/usr/include/gnome-vfs-2.0 -I/usr/lib/gnome-vfs-2.0/include -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GNOME_VFS_LIBS = -pthread -lgnomevfs-2 -lgconf-2 -lgthread-2.0 -lrt -lgmodule-2.0 -ldl -lgobject-2.0 -lglib-2.0  
GREP = /bin/grep
GTKDOC_CHECK = /usr/bin/gtkdoc-check
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
GTK_DOC_USE_LIBTOOL_FALSE = #
GTK_DOC_USE_LIBTOOL_TRUE = 
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
HILDON_BACKGROUND_MANAGER_INTERFACE = org.maemo.hildon.background_manager
HILDON_BACKGROUND_MANAGER_OBJECT_PATH = /org/maemo/hildon/background_manager
HILDON_BACKGROUND_MANAGER_SERVICE = org.maemo.hildon.background_manager
HILDON_CFLAGS = -I/opt/hildon/include/hildon-1 -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
HILDON_FM_CFLAGS = 
HILDON_FM_LIBS = 
HILDON_HELP_CFLAGS = 
HILDON_HELP_LIBS = 
HILDON_LIBS = -L/opt/hildon/lib -lhildon-1 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LDFLAGS = -L/opt/hildon/lib 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML_CFLAGS = -I/usr/include/libxml2  
LIBXML_LIBS = -lxml2  
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run makeinfo
MCE_CFLAGS = 
MCE_LIBS = 
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
NMEDIT = 
OBJEXT = o
OSSOSETTINGS_CFLAGS = 
OSSOSETTINGS_LIBS = 
OSSO_CFLAGS = 
OSSO_LIBS = 
PACKAGE = hildon-desktop
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES =  en_GB.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SQLITE_CFLAGS = 
SQLITE_LIBS = 
STRIP = strip
USE_NLS = yes
VERSION = 2.0.19
XCOMPOSITE_CFLAGS =  
XCOMPOSITE_LIBS = -lXcomposite -lXfixes  
XDAMAGE_CFLAGS =  
XDAMAGE_LIBS = -lXdamage -lXfixes  
XGETTEXT = /usr/bin/xgettext
XLIBS_CFLAGS =  
XLIBS_ERROR_LIBS = 
XLIBS_LIBS = -lX11  
XMKMF = 
XTEST_CFLAGS =  
XTEST_LIBS = -lXtst  
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
hildoncpdesktopentrydir = ${datarootdir}/applications/hildon-control-panel
hildondesktopbackgroundsdir = ${datarootdir}/backgrounds
hildondesktopconfdir = ${prefix}/etc/hildon-desktop
hildondesktopentrydir = ${datarootdir}/applications
hildondesktoplibdir = ${exec_prefix}/lib/hildon-desktop
hildondesktopmenudir = ${prefix}/etc/xdg/menus
hildondesktopstartupdir = ${prefix}/etc/osso-af-init
hildonhomedesktopentrydir = /opt/hildon/share/applications/hildon-home
hildonhomelibdir = ${exec_prefix}/lib/hildon-home
hildonnavigatordesktopentrydir = /opt/hildon/share/applications/hildon-navigator
hildonnavigatorlibdir = ${exec_prefix}/lib/hildon-navigator
hildonpluginloaderlibdir = ${exec_prefix}/lib/hildon-desktop/loaders
hildonstatusbardesktopentrydir = /opt/hildon/share/applications/hildon-status-bar
hildonstatusbarlibdir = ${exec_prefix}/lib/hildon-status-bar
hildonuipolicylibdir = ${exec_prefix}/lib/hildon-desktop/policies
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/bruce/code/hildon/hildon-desktop/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
oldincludedir = /usr/include
pdfdir = ${docdir}
pluginlibdir = ${exec_prefix}/lib/hildon-desktop
prefix = /opt/hildon
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = hildon-desktop.pc
pkginclude_HEADERS = hd-plugin-loader.h \
		     hd-config.h 


bin_PROGRAMS = hd-hung-app-handler hildon-desktop

hd_hung_app_handler_SOURCES = hd-hung-app-handler.c
hd_hung_app_handler_LDADD = $(XLIBS_LIBS)

BUILT_SOURCES = \
	hd-panel-window-dialog-service.h \
	hd-marshalers.c                  \
	hd-marshalers.h


hildon_desktop_CPPFLAGS = \
	$(HILDON_CFLAGS)             					   \
	$(HILDON_FM_CFLAGS)             				   \
	$(OSSO_CFLAGS)               					   \
	$(HILDON_HELP_CFLAGS)          					   \
	$(MCE_CFLAGS)                                                      \
	$(GCONF_CFLAGS)                                                    \
	$(LIBXML_CFLAGS)                                                   \
	$(GNOME_VFS_CFLAGS)                                                \
	$(DBUS_GLIB_CFLAGS)                                                \
	$(LAUNCHER_CFLAGS)                                                 \
	-I$(top_srcdir) 						   \
	-DLOCALEDIR=\"$(localedir)\" 					   \
	-DDATADIR=\"$(datadir)\"                                           \
	-DHD_DESKTOP_ENTRY_PATH=\"$(hildondesktopentrydir)\" 		   \
	-DHD_DESKTOP_CONFIG_PATH=\"$(hildondesktopconfdir)\" 		   \
	-DHD_DESKTOP_MODULE_PATH=\"$(hildondesktoplibdir)\"                \
	-DHD_DESKTOP_MENU_PATH=\"$(hildondesktopmenudir)\"                 \
	-DHD_DESKTOP_BACKGROUNDS_PATH=\"$(hildondesktopbackgroundsdir)\"   \
	-DHD_PLUGIN_LOADER_MODULES_PATH=\"$(hildonpluginloaderlibdir)\"    \
	-DHD_UI_POLICY_MODULES_PATH=\"$(hildonuipolicylibdir)\"            \
	-DHD_PLUGIN_LOADER_LEGACY_HOME_MODULE_PATH=\"$(hildonhomelibdir)\" \
	-DHD_PLUGIN_LOADER_LEGACY_STATUSBAR_MODULE_PATH=\"$(hildonstatusbarlibdir)\" \
	-DHD_PLUGIN_LOADER_LEGACY_NAVIGATOR_MODULE_PATH=\"$(hildonnavigatorlibdir)\"


hildon_desktop_LDFLAGS = \
	-rdynamic           \
	$(LAUNCHER_LDFLAGS) \
	$(HILDON_LIBS)	    \
	$(HILDON_FM_LIBS)   \
	$(OSSO_LIBS)	    \
	$(GCONF_LIBS)       \
	$(HILDON_HELP_LIBS) \
	$(GNOME_VFS_LIBS)   \
	$(DBUS_GLIB_LIBS)


hildon_desktop_LDADD = \
	$(top_srcdir)/libhildondesktop/libhildondesktop.la \
	$(top_srcdir)/libhildonwm/libhildonwm.la


PLUGIN_MANAGER_SOURCES = \
	hd-ui-policy.c              \
	hd-ui-policy.h              \
	hd-plugin-manager.c         \
	hd-plugin-manager.h         \
	hd-plugin-loader-factory.c  \
	hd-plugin-loader-factory.h  \
	hd-plugin-loader.c          \
	hd-plugin-loader.h          \
	hd-plugin-loader-default.c  \
	hd-plugin-loader-default.h  \
	hd-plugin-loader-builtin.c  \
	hd-plugin-loader-builtin.h  \
	hd-plugin-loader-legacy.c   \
	hd-plugin-loader-legacy.h 


HOME_SOURCES = \
	hd-home-window.c            \
	hd-home-window.h            \
	hd-home-background-dialog.c \
	hd-home-background-dialog.h \
	hd-home-background.c        \
	hd-home-background.h


APP_SWITCHER_SOURCES = \
	hn-app-pixbuf-anim-blinker.c  \
	hn-app-pixbuf-anim-blinker.h  \
	hn-app-button.c               \
	hn-app-button.h               \
	hn-app-sound.c                \
	hn-app-sound.h                \
	hn-app-switcher.c             \
	hn-app-switcher.h             \
	hn-app-tooltip.c              \
	hn-app-tooltip.h 	      \
	hd-switcher-menu.h	      \
	hd-switcher-menu.c	      \
	hd-switcher-menu-item.h	      \
	hd-switcher-menu-item.c


OTHERS_BUTTON_SOURCES = \
	hn-others-button.c \
	hn-others-button.h


APPLICATIONS_MENU_SOURCES = \
	hd-applications-menu.c \
	hd-applications-menu.h


hildon_desktop_SOURCES = \
	$(BUILT_SOURCES)             \
	$(PLUGIN_MANAGER_SOURCES)    \
	$(HOME_SOURCES)              \
	$(APP_SWITCHER_SOURCES)      \
	$(APPLICATIONS_MENU_SOURCES) \
	$(OTHERS_BUTTON_SOURCES)     \
	hd-desktop.c                 \
	hd-desktop.h                 \
	hd-select-plugins-dialog.c   \
	hd-select-plugins-dialog.h   \
	hd-panel-window.c            \
	hd-panel-window.h            \
	hd-panel-window-dialog.c     \
	hd-panel-window-dialog.h     \
	hd-config.h                  \
	main.c


pluginlib_LTLIBRARIES = libhd-applications-menu-settings.la

libhd_applications_menu_settings_la_CPPFLAGS = $(HILDON_CFLAGS) \
                                               $(LIBXML_CFLAGS)

libhd_applications_menu_settings_la_LDFLAGS = -module -avoid-version
libhd_applications_menu_settings_la_LIBADD = \
                $(top_srcdir)/libhildondesktop/libhildondesktop.la


libhd_applications_menu_settings_la_SOURCES = \
                            hd-app-menu-dialog.c \
                            hd-app-menu-dialog.h \
                            hd-app-menu-tree.c \
                            hd-app-menu-tree.h \
                            hd-applications-menu-settings-l10n.h \
                            hd-applications-menu-settings.c


EXTRA_DIST = statusbar.xml

CLEANFILES = *~ $(BUILT_SOURCES)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = hildon-desktop.pc
LTLIBRARIES = $(pluginlib_LTLIBRARIES)

libhd_applications_menu_settings_la_DEPENDENCIES = \
	$(top_srcdir)/libhildondesktop/libhildondesktop.la
am_libhd_applications_menu_settings_la_OBJECTS = \
	libhd_applications_menu_settings_la-hd-app-menu-dialog.lo \
	libhd_applications_menu_settings_la-hd-app-menu-tree.lo \
	libhd_applications_menu_settings_la-hd-applications-menu-settings.lo
libhd_applications_menu_settings_la_OBJECTS = \
	$(am_libhd_applications_menu_settings_la_OBJECTS)
bin_PROGRAMS = hd-hung-app-handler$(EXEEXT) hildon-desktop$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_hd_hung_app_handler_OBJECTS = hd-hung-app-handler.$(OBJEXT)
hd_hung_app_handler_OBJECTS = $(am_hd_hung_app_handler_OBJECTS)
hd_hung_app_handler_DEPENDENCIES =
hd_hung_app_handler_LDFLAGS =
am__objects_1 = hildon_desktop-hd-marshalers.$(OBJEXT)
am__objects_2 = hildon_desktop-hd-ui-policy.$(OBJEXT) \
	hildon_desktop-hd-plugin-manager.$(OBJEXT) \
	hildon_desktop-hd-plugin-loader-factory.$(OBJEXT) \
	hildon_desktop-hd-plugin-loader.$(OBJEXT) \
	hildon_desktop-hd-plugin-loader-default.$(OBJEXT) \
	hildon_desktop-hd-plugin-loader-builtin.$(OBJEXT) \
	hildon_desktop-hd-plugin-loader-legacy.$(OBJEXT)
am__objects_3 = hildon_desktop-hd-home-window.$(OBJEXT) \
	hildon_desktop-hd-home-background-dialog.$(OBJEXT) \
	hildon_desktop-hd-home-background.$(OBJEXT)
am__objects_4 = hildon_desktop-hn-app-pixbuf-anim-blinker.$(OBJEXT) \
	hildon_desktop-hn-app-button.$(OBJEXT) \
	hildon_desktop-hn-app-sound.$(OBJEXT) \
	hildon_desktop-hn-app-switcher.$(OBJEXT) \
	hildon_desktop-hn-app-tooltip.$(OBJEXT) \
	hildon_desktop-hd-switcher-menu.$(OBJEXT) \
	hildon_desktop-hd-switcher-menu-item.$(OBJEXT)
am__objects_5 = hildon_desktop-hd-applications-menu.$(OBJEXT)
am__objects_6 = hildon_desktop-hn-others-button.$(OBJEXT)
am_hildon_desktop_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) hildon_desktop-hd-desktop.$(OBJEXT) \
	hildon_desktop-hd-select-plugins-dialog.$(OBJEXT) \
	hildon_desktop-hd-panel-window.$(OBJEXT) \
	hildon_desktop-hd-panel-window-dialog.$(OBJEXT) \
	hildon_desktop-main.$(OBJEXT)
hildon_desktop_OBJECTS = $(am_hildon_desktop_OBJECTS)
hildon_desktop_DEPENDENCIES = \
	$(top_srcdir)/libhildondesktop/libhildondesktop.la \
	$(top_srcdir)/libhildonwm/libhildonwm.la

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/hd-hung-app-handler.Po \
	./$(DEPDIR)/hildon_desktop-hd-applications-menu.Po \
	./$(DEPDIR)/hildon_desktop-hd-desktop.Po \
	./$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Po \
	./$(DEPDIR)/hildon_desktop-hd-home-background.Po \
	./$(DEPDIR)/hildon_desktop-hd-home-window.Po \
	./$(DEPDIR)/hildon_desktop-hd-marshalers.Po \
	./$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Po \
	./$(DEPDIR)/hildon_desktop-hd-panel-window.Po \
	./$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Po \
	./$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Po \
	./$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Po \
	./$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Po \
	./$(DEPDIR)/hildon_desktop-hd-plugin-loader.Po \
	./$(DEPDIR)/hildon_desktop-hd-plugin-manager.Po \
	./$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Po \
	./$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Po \
	./$(DEPDIR)/hildon_desktop-hd-switcher-menu.Po \
	./$(DEPDIR)/hildon_desktop-hd-ui-policy.Po \
	./$(DEPDIR)/hildon_desktop-hn-app-button.Po \
	./$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Po \
	./$(DEPDIR)/hildon_desktop-hn-app-sound.Po \
	./$(DEPDIR)/hildon_desktop-hn-app-switcher.Po \
	./$(DEPDIR)/hildon_desktop-hn-app-tooltip.Po \
	./$(DEPDIR)/hildon_desktop-hn-others-button.Po \
	./$(DEPDIR)/hildon_desktop-main.Po \
	./$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Plo \
	./$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Plo \
	./$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libhd_applications_menu_settings_la_SOURCES) \
	$(hd_hung_app_handler_SOURCES) $(hildon_desktop_SOURCES)
DATA = $(pkgconfig_DATA)

HEADERS = $(pkginclude_HEADERS)

DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)/Makefile.in Makefile.am \
	hildon-desktop.pc.in
SOURCES = $(libhd_applications_menu_settings_la_SOURCES) $(hd_hung_app_handler_SOURCES) $(hildon_desktop_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
hildon-desktop.pc: $(top_builddir)/config.status hildon-desktop.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pluginlibLTLIBRARIES_INSTALL = $(INSTALL)
install-pluginlibLTLIBRARIES: $(pluginlib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pluginlibdir)
	@list='$(pluginlib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(pluginlibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(pluginlibdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(pluginlibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(pluginlibdir)/$$f; \
	  else :; fi; \
	done

uninstall-pluginlibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pluginlib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(pluginlibdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(pluginlibdir)/$$p; \
	done

clean-pluginlibLTLIBRARIES:
	-test -z "$(pluginlib_LTLIBRARIES)" || rm -f $(pluginlib_LTLIBRARIES)
	@list='$(pluginlib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libhd-applications-menu-settings.la: $(libhd_applications_menu_settings_la_OBJECTS) $(libhd_applications_menu_settings_la_DEPENDENCIES) 
	$(LINK) -rpath $(pluginlibdir) $(libhd_applications_menu_settings_la_LDFLAGS) $(libhd_applications_menu_settings_la_OBJECTS) $(libhd_applications_menu_settings_la_LIBADD) $(LIBS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
hd-hung-app-handler$(EXEEXT): $(hd_hung_app_handler_OBJECTS) $(hd_hung_app_handler_DEPENDENCIES) 
	@rm -f hd-hung-app-handler$(EXEEXT)
	$(LINK) $(hd_hung_app_handler_LDFLAGS) $(hd_hung_app_handler_OBJECTS) $(hd_hung_app_handler_LDADD) $(LIBS)
hildon-desktop$(EXEEXT): $(hildon_desktop_OBJECTS) $(hildon_desktop_DEPENDENCIES) 
	@rm -f hildon-desktop$(EXEEXT)
	$(LINK) $(hildon_desktop_LDFLAGS) $(hildon_desktop_OBJECTS) $(hildon_desktop_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/hd-hung-app-handler.Po
include ./$(DEPDIR)/hildon_desktop-hd-applications-menu.Po
include ./$(DEPDIR)/hildon_desktop-hd-desktop.Po
include ./$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Po
include ./$(DEPDIR)/hildon_desktop-hd-home-background.Po
include ./$(DEPDIR)/hildon_desktop-hd-home-window.Po
include ./$(DEPDIR)/hildon_desktop-hd-marshalers.Po
include ./$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Po
include ./$(DEPDIR)/hildon_desktop-hd-panel-window.Po
include ./$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Po
include ./$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Po
include ./$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Po
include ./$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Po
include ./$(DEPDIR)/hildon_desktop-hd-plugin-loader.Po
include ./$(DEPDIR)/hildon_desktop-hd-plugin-manager.Po
include ./$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Po
include ./$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Po
include ./$(DEPDIR)/hildon_desktop-hd-switcher-menu.Po
include ./$(DEPDIR)/hildon_desktop-hd-ui-policy.Po
include ./$(DEPDIR)/hildon_desktop-hn-app-button.Po
include ./$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Po
include ./$(DEPDIR)/hildon_desktop-hn-app-sound.Po
include ./$(DEPDIR)/hildon_desktop-hn-app-switcher.Po
include ./$(DEPDIR)/hildon_desktop-hn-app-tooltip.Po
include ./$(DEPDIR)/hildon_desktop-hn-others-button.Po
include ./$(DEPDIR)/hildon_desktop-main.Po
include ./$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Plo
include ./$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Plo
include ./$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

libhd_applications_menu_settings_la-hd-app-menu-dialog.o: hd-app-menu-dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhd_applications_menu_settings_la-hd-app-menu-dialog.o -MD -MP -MF "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Tpo" \
	  -c -o libhd_applications_menu_settings_la-hd-app-menu-dialog.o `test -f 'hd-app-menu-dialog.c' || echo '$(srcdir)/'`hd-app-menu-dialog.c; \
	then mv -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Tpo" "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Po"; \
	else rm -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Tpo"; exit 1; \
	fi
#	source='hd-app-menu-dialog.c' object='libhd_applications_menu_settings_la-hd-app-menu-dialog.o' libtool=no \
#	depfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Po' tmpdepfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhd_applications_menu_settings_la-hd-app-menu-dialog.o `test -f 'hd-app-menu-dialog.c' || echo '$(srcdir)/'`hd-app-menu-dialog.c

libhd_applications_menu_settings_la-hd-app-menu-dialog.obj: hd-app-menu-dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhd_applications_menu_settings_la-hd-app-menu-dialog.obj -MD -MP -MF "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Tpo" \
	  -c -o libhd_applications_menu_settings_la-hd-app-menu-dialog.obj `if test -f 'hd-app-menu-dialog.c'; then $(CYGPATH_W) 'hd-app-menu-dialog.c'; else $(CYGPATH_W) '$(srcdir)/hd-app-menu-dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Tpo" "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Po"; \
	else rm -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Tpo"; exit 1; \
	fi
#	source='hd-app-menu-dialog.c' object='libhd_applications_menu_settings_la-hd-app-menu-dialog.obj' libtool=no \
#	depfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Po' tmpdepfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhd_applications_menu_settings_la-hd-app-menu-dialog.obj `if test -f 'hd-app-menu-dialog.c'; then $(CYGPATH_W) 'hd-app-menu-dialog.c'; else $(CYGPATH_W) '$(srcdir)/hd-app-menu-dialog.c'; fi`

libhd_applications_menu_settings_la-hd-app-menu-dialog.lo: hd-app-menu-dialog.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhd_applications_menu_settings_la-hd-app-menu-dialog.lo -MD -MP -MF "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Tpo" \
	  -c -o libhd_applications_menu_settings_la-hd-app-menu-dialog.lo `test -f 'hd-app-menu-dialog.c' || echo '$(srcdir)/'`hd-app-menu-dialog.c; \
	then mv -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Tpo" "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Plo"; \
	else rm -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Tpo"; exit 1; \
	fi
#	source='hd-app-menu-dialog.c' object='libhd_applications_menu_settings_la-hd-app-menu-dialog.lo' libtool=yes \
#	depfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.Plo' tmpdepfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-dialog.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhd_applications_menu_settings_la-hd-app-menu-dialog.lo `test -f 'hd-app-menu-dialog.c' || echo '$(srcdir)/'`hd-app-menu-dialog.c

libhd_applications_menu_settings_la-hd-app-menu-tree.o: hd-app-menu-tree.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhd_applications_menu_settings_la-hd-app-menu-tree.o -MD -MP -MF "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Tpo" \
	  -c -o libhd_applications_menu_settings_la-hd-app-menu-tree.o `test -f 'hd-app-menu-tree.c' || echo '$(srcdir)/'`hd-app-menu-tree.c; \
	then mv -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Tpo" "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Po"; \
	else rm -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Tpo"; exit 1; \
	fi
#	source='hd-app-menu-tree.c' object='libhd_applications_menu_settings_la-hd-app-menu-tree.o' libtool=no \
#	depfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Po' tmpdepfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhd_applications_menu_settings_la-hd-app-menu-tree.o `test -f 'hd-app-menu-tree.c' || echo '$(srcdir)/'`hd-app-menu-tree.c

libhd_applications_menu_settings_la-hd-app-menu-tree.obj: hd-app-menu-tree.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhd_applications_menu_settings_la-hd-app-menu-tree.obj -MD -MP -MF "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Tpo" \
	  -c -o libhd_applications_menu_settings_la-hd-app-menu-tree.obj `if test -f 'hd-app-menu-tree.c'; then $(CYGPATH_W) 'hd-app-menu-tree.c'; else $(CYGPATH_W) '$(srcdir)/hd-app-menu-tree.c'; fi`; \
	then mv -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Tpo" "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Po"; \
	else rm -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Tpo"; exit 1; \
	fi
#	source='hd-app-menu-tree.c' object='libhd_applications_menu_settings_la-hd-app-menu-tree.obj' libtool=no \
#	depfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Po' tmpdepfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhd_applications_menu_settings_la-hd-app-menu-tree.obj `if test -f 'hd-app-menu-tree.c'; then $(CYGPATH_W) 'hd-app-menu-tree.c'; else $(CYGPATH_W) '$(srcdir)/hd-app-menu-tree.c'; fi`

libhd_applications_menu_settings_la-hd-app-menu-tree.lo: hd-app-menu-tree.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhd_applications_menu_settings_la-hd-app-menu-tree.lo -MD -MP -MF "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Tpo" \
	  -c -o libhd_applications_menu_settings_la-hd-app-menu-tree.lo `test -f 'hd-app-menu-tree.c' || echo '$(srcdir)/'`hd-app-menu-tree.c; \
	then mv -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Tpo" "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Plo"; \
	else rm -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Tpo"; exit 1; \
	fi
#	source='hd-app-menu-tree.c' object='libhd_applications_menu_settings_la-hd-app-menu-tree.lo' libtool=yes \
#	depfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.Plo' tmpdepfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-app-menu-tree.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhd_applications_menu_settings_la-hd-app-menu-tree.lo `test -f 'hd-app-menu-tree.c' || echo '$(srcdir)/'`hd-app-menu-tree.c

libhd_applications_menu_settings_la-hd-applications-menu-settings.o: hd-applications-menu-settings.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhd_applications_menu_settings_la-hd-applications-menu-settings.o -MD -MP -MF "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Tpo" \
	  -c -o libhd_applications_menu_settings_la-hd-applications-menu-settings.o `test -f 'hd-applications-menu-settings.c' || echo '$(srcdir)/'`hd-applications-menu-settings.c; \
	then mv -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Tpo" "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Po"; \
	else rm -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Tpo"; exit 1; \
	fi
#	source='hd-applications-menu-settings.c' object='libhd_applications_menu_settings_la-hd-applications-menu-settings.o' libtool=no \
#	depfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Po' tmpdepfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhd_applications_menu_settings_la-hd-applications-menu-settings.o `test -f 'hd-applications-menu-settings.c' || echo '$(srcdir)/'`hd-applications-menu-settings.c

libhd_applications_menu_settings_la-hd-applications-menu-settings.obj: hd-applications-menu-settings.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhd_applications_menu_settings_la-hd-applications-menu-settings.obj -MD -MP -MF "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Tpo" \
	  -c -o libhd_applications_menu_settings_la-hd-applications-menu-settings.obj `if test -f 'hd-applications-menu-settings.c'; then $(CYGPATH_W) 'hd-applications-menu-settings.c'; else $(CYGPATH_W) '$(srcdir)/hd-applications-menu-settings.c'; fi`; \
	then mv -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Tpo" "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Po"; \
	else rm -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Tpo"; exit 1; \
	fi
#	source='hd-applications-menu-settings.c' object='libhd_applications_menu_settings_la-hd-applications-menu-settings.obj' libtool=no \
#	depfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Po' tmpdepfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhd_applications_menu_settings_la-hd-applications-menu-settings.obj `if test -f 'hd-applications-menu-settings.c'; then $(CYGPATH_W) 'hd-applications-menu-settings.c'; else $(CYGPATH_W) '$(srcdir)/hd-applications-menu-settings.c'; fi`

libhd_applications_menu_settings_la-hd-applications-menu-settings.lo: hd-applications-menu-settings.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhd_applications_menu_settings_la-hd-applications-menu-settings.lo -MD -MP -MF "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Tpo" \
	  -c -o libhd_applications_menu_settings_la-hd-applications-menu-settings.lo `test -f 'hd-applications-menu-settings.c' || echo '$(srcdir)/'`hd-applications-menu-settings.c; \
	then mv -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Tpo" "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Plo"; \
	else rm -f "$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Tpo"; exit 1; \
	fi
#	source='hd-applications-menu-settings.c' object='libhd_applications_menu_settings_la-hd-applications-menu-settings.lo' libtool=yes \
#	depfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.Plo' tmpdepfile='$(DEPDIR)/libhd_applications_menu_settings_la-hd-applications-menu-settings.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhd_applications_menu_settings_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhd_applications_menu_settings_la-hd-applications-menu-settings.lo `test -f 'hd-applications-menu-settings.c' || echo '$(srcdir)/'`hd-applications-menu-settings.c

hildon_desktop-hd-marshalers.o: hd-marshalers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-marshalers.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-marshalers.Tpo" \
	  -c -o hildon_desktop-hd-marshalers.o `test -f 'hd-marshalers.c' || echo '$(srcdir)/'`hd-marshalers.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-marshalers.Tpo" "$(DEPDIR)/hildon_desktop-hd-marshalers.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-marshalers.Tpo"; exit 1; \
	fi
#	source='hd-marshalers.c' object='hildon_desktop-hd-marshalers.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-marshalers.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-marshalers.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-marshalers.o `test -f 'hd-marshalers.c' || echo '$(srcdir)/'`hd-marshalers.c

hildon_desktop-hd-marshalers.obj: hd-marshalers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-marshalers.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-marshalers.Tpo" \
	  -c -o hildon_desktop-hd-marshalers.obj `if test -f 'hd-marshalers.c'; then $(CYGPATH_W) 'hd-marshalers.c'; else $(CYGPATH_W) '$(srcdir)/hd-marshalers.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-marshalers.Tpo" "$(DEPDIR)/hildon_desktop-hd-marshalers.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-marshalers.Tpo"; exit 1; \
	fi
#	source='hd-marshalers.c' object='hildon_desktop-hd-marshalers.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-marshalers.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-marshalers.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-marshalers.obj `if test -f 'hd-marshalers.c'; then $(CYGPATH_W) 'hd-marshalers.c'; else $(CYGPATH_W) '$(srcdir)/hd-marshalers.c'; fi`

hildon_desktop-hd-marshalers.lo: hd-marshalers.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-marshalers.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-marshalers.Tpo" \
	  -c -o hildon_desktop-hd-marshalers.lo `test -f 'hd-marshalers.c' || echo '$(srcdir)/'`hd-marshalers.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-marshalers.Tpo" "$(DEPDIR)/hildon_desktop-hd-marshalers.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-marshalers.Tpo"; exit 1; \
	fi
#	source='hd-marshalers.c' object='hildon_desktop-hd-marshalers.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-marshalers.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-marshalers.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-marshalers.lo `test -f 'hd-marshalers.c' || echo '$(srcdir)/'`hd-marshalers.c

hildon_desktop-hd-ui-policy.o: hd-ui-policy.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-ui-policy.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-ui-policy.Tpo" \
	  -c -o hildon_desktop-hd-ui-policy.o `test -f 'hd-ui-policy.c' || echo '$(srcdir)/'`hd-ui-policy.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-ui-policy.Tpo" "$(DEPDIR)/hildon_desktop-hd-ui-policy.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-ui-policy.Tpo"; exit 1; \
	fi
#	source='hd-ui-policy.c' object='hildon_desktop-hd-ui-policy.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-ui-policy.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-ui-policy.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-ui-policy.o `test -f 'hd-ui-policy.c' || echo '$(srcdir)/'`hd-ui-policy.c

hildon_desktop-hd-ui-policy.obj: hd-ui-policy.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-ui-policy.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-ui-policy.Tpo" \
	  -c -o hildon_desktop-hd-ui-policy.obj `if test -f 'hd-ui-policy.c'; then $(CYGPATH_W) 'hd-ui-policy.c'; else $(CYGPATH_W) '$(srcdir)/hd-ui-policy.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-ui-policy.Tpo" "$(DEPDIR)/hildon_desktop-hd-ui-policy.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-ui-policy.Tpo"; exit 1; \
	fi
#	source='hd-ui-policy.c' object='hildon_desktop-hd-ui-policy.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-ui-policy.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-ui-policy.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-ui-policy.obj `if test -f 'hd-ui-policy.c'; then $(CYGPATH_W) 'hd-ui-policy.c'; else $(CYGPATH_W) '$(srcdir)/hd-ui-policy.c'; fi`

hildon_desktop-hd-ui-policy.lo: hd-ui-policy.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-ui-policy.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-ui-policy.Tpo" \
	  -c -o hildon_desktop-hd-ui-policy.lo `test -f 'hd-ui-policy.c' || echo '$(srcdir)/'`hd-ui-policy.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-ui-policy.Tpo" "$(DEPDIR)/hildon_desktop-hd-ui-policy.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-ui-policy.Tpo"; exit 1; \
	fi
#	source='hd-ui-policy.c' object='hildon_desktop-hd-ui-policy.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-ui-policy.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-ui-policy.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-ui-policy.lo `test -f 'hd-ui-policy.c' || echo '$(srcdir)/'`hd-ui-policy.c

hildon_desktop-hd-plugin-manager.o: hd-plugin-manager.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-manager.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Tpo" \
	  -c -o hildon_desktop-hd-plugin-manager.o `test -f 'hd-plugin-manager.c' || echo '$(srcdir)/'`hd-plugin-manager.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Tpo"; exit 1; \
	fi
#	source='hd-plugin-manager.c' object='hildon_desktop-hd-plugin-manager.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-manager.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-manager.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-manager.o `test -f 'hd-plugin-manager.c' || echo '$(srcdir)/'`hd-plugin-manager.c

hildon_desktop-hd-plugin-manager.obj: hd-plugin-manager.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-manager.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Tpo" \
	  -c -o hildon_desktop-hd-plugin-manager.obj `if test -f 'hd-plugin-manager.c'; then $(CYGPATH_W) 'hd-plugin-manager.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-manager.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Tpo"; exit 1; \
	fi
#	source='hd-plugin-manager.c' object='hildon_desktop-hd-plugin-manager.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-manager.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-manager.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-manager.obj `if test -f 'hd-plugin-manager.c'; then $(CYGPATH_W) 'hd-plugin-manager.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-manager.c'; fi`

hildon_desktop-hd-plugin-manager.lo: hd-plugin-manager.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-manager.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Tpo" \
	  -c -o hildon_desktop-hd-plugin-manager.lo `test -f 'hd-plugin-manager.c' || echo '$(srcdir)/'`hd-plugin-manager.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-manager.Tpo"; exit 1; \
	fi
#	source='hd-plugin-manager.c' object='hildon_desktop-hd-plugin-manager.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-manager.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-manager.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-manager.lo `test -f 'hd-plugin-manager.c' || echo '$(srcdir)/'`hd-plugin-manager.c

hildon_desktop-hd-plugin-loader-factory.o: hd-plugin-loader-factory.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-factory.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-factory.o `test -f 'hd-plugin-loader-factory.c' || echo '$(srcdir)/'`hd-plugin-loader-factory.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-factory.c' object='hildon_desktop-hd-plugin-loader-factory.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-factory.o `test -f 'hd-plugin-loader-factory.c' || echo '$(srcdir)/'`hd-plugin-loader-factory.c

hildon_desktop-hd-plugin-loader-factory.obj: hd-plugin-loader-factory.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-factory.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-factory.obj `if test -f 'hd-plugin-loader-factory.c'; then $(CYGPATH_W) 'hd-plugin-loader-factory.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-loader-factory.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-factory.c' object='hildon_desktop-hd-plugin-loader-factory.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-factory.obj `if test -f 'hd-plugin-loader-factory.c'; then $(CYGPATH_W) 'hd-plugin-loader-factory.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-loader-factory.c'; fi`

hildon_desktop-hd-plugin-loader-factory.lo: hd-plugin-loader-factory.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-factory.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-factory.lo `test -f 'hd-plugin-loader-factory.c' || echo '$(srcdir)/'`hd-plugin-loader-factory.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-factory.c' object='hildon_desktop-hd-plugin-loader-factory.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-factory.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-factory.lo `test -f 'hd-plugin-loader-factory.c' || echo '$(srcdir)/'`hd-plugin-loader-factory.c

hildon_desktop-hd-plugin-loader.o: hd-plugin-loader.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader.o `test -f 'hd-plugin-loader.c' || echo '$(srcdir)/'`hd-plugin-loader.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader.c' object='hildon_desktop-hd-plugin-loader.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader.o `test -f 'hd-plugin-loader.c' || echo '$(srcdir)/'`hd-plugin-loader.c

hildon_desktop-hd-plugin-loader.obj: hd-plugin-loader.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader.obj `if test -f 'hd-plugin-loader.c'; then $(CYGPATH_W) 'hd-plugin-loader.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-loader.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader.c' object='hildon_desktop-hd-plugin-loader.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader.obj `if test -f 'hd-plugin-loader.c'; then $(CYGPATH_W) 'hd-plugin-loader.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-loader.c'; fi`

hildon_desktop-hd-plugin-loader.lo: hd-plugin-loader.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader.lo `test -f 'hd-plugin-loader.c' || echo '$(srcdir)/'`hd-plugin-loader.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader.c' object='hildon_desktop-hd-plugin-loader.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader.lo `test -f 'hd-plugin-loader.c' || echo '$(srcdir)/'`hd-plugin-loader.c

hildon_desktop-hd-plugin-loader-default.o: hd-plugin-loader-default.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-default.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-default.o `test -f 'hd-plugin-loader-default.c' || echo '$(srcdir)/'`hd-plugin-loader-default.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-default.c' object='hildon_desktop-hd-plugin-loader-default.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-default.o `test -f 'hd-plugin-loader-default.c' || echo '$(srcdir)/'`hd-plugin-loader-default.c

hildon_desktop-hd-plugin-loader-default.obj: hd-plugin-loader-default.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-default.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-default.obj `if test -f 'hd-plugin-loader-default.c'; then $(CYGPATH_W) 'hd-plugin-loader-default.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-loader-default.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-default.c' object='hildon_desktop-hd-plugin-loader-default.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-default.obj `if test -f 'hd-plugin-loader-default.c'; then $(CYGPATH_W) 'hd-plugin-loader-default.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-loader-default.c'; fi`

hildon_desktop-hd-plugin-loader-default.lo: hd-plugin-loader-default.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-default.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-default.lo `test -f 'hd-plugin-loader-default.c' || echo '$(srcdir)/'`hd-plugin-loader-default.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-default.c' object='hildon_desktop-hd-plugin-loader-default.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-default.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-default.lo `test -f 'hd-plugin-loader-default.c' || echo '$(srcdir)/'`hd-plugin-loader-default.c

hildon_desktop-hd-plugin-loader-builtin.o: hd-plugin-loader-builtin.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-builtin.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-builtin.o `test -f 'hd-plugin-loader-builtin.c' || echo '$(srcdir)/'`hd-plugin-loader-builtin.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-builtin.c' object='hildon_desktop-hd-plugin-loader-builtin.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-builtin.o `test -f 'hd-plugin-loader-builtin.c' || echo '$(srcdir)/'`hd-plugin-loader-builtin.c

hildon_desktop-hd-plugin-loader-builtin.obj: hd-plugin-loader-builtin.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-builtin.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-builtin.obj `if test -f 'hd-plugin-loader-builtin.c'; then $(CYGPATH_W) 'hd-plugin-loader-builtin.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-loader-builtin.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-builtin.c' object='hildon_desktop-hd-plugin-loader-builtin.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-builtin.obj `if test -f 'hd-plugin-loader-builtin.c'; then $(CYGPATH_W) 'hd-plugin-loader-builtin.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-loader-builtin.c'; fi`

hildon_desktop-hd-plugin-loader-builtin.lo: hd-plugin-loader-builtin.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-builtin.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-builtin.lo `test -f 'hd-plugin-loader-builtin.c' || echo '$(srcdir)/'`hd-plugin-loader-builtin.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-builtin.c' object='hildon_desktop-hd-plugin-loader-builtin.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-builtin.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-builtin.lo `test -f 'hd-plugin-loader-builtin.c' || echo '$(srcdir)/'`hd-plugin-loader-builtin.c

hildon_desktop-hd-plugin-loader-legacy.o: hd-plugin-loader-legacy.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-legacy.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-legacy.o `test -f 'hd-plugin-loader-legacy.c' || echo '$(srcdir)/'`hd-plugin-loader-legacy.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-legacy.c' object='hildon_desktop-hd-plugin-loader-legacy.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-legacy.o `test -f 'hd-plugin-loader-legacy.c' || echo '$(srcdir)/'`hd-plugin-loader-legacy.c

hildon_desktop-hd-plugin-loader-legacy.obj: hd-plugin-loader-legacy.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-legacy.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-legacy.obj `if test -f 'hd-plugin-loader-legacy.c'; then $(CYGPATH_W) 'hd-plugin-loader-legacy.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-loader-legacy.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-legacy.c' object='hildon_desktop-hd-plugin-loader-legacy.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-legacy.obj `if test -f 'hd-plugin-loader-legacy.c'; then $(CYGPATH_W) 'hd-plugin-loader-legacy.c'; else $(CYGPATH_W) '$(srcdir)/hd-plugin-loader-legacy.c'; fi`

hildon_desktop-hd-plugin-loader-legacy.lo: hd-plugin-loader-legacy.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-plugin-loader-legacy.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Tpo" \
	  -c -o hildon_desktop-hd-plugin-loader-legacy.lo `test -f 'hd-plugin-loader-legacy.c' || echo '$(srcdir)/'`hd-plugin-loader-legacy.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Tpo" "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Tpo"; exit 1; \
	fi
#	source='hd-plugin-loader-legacy.c' object='hildon_desktop-hd-plugin-loader-legacy.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-plugin-loader-legacy.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-plugin-loader-legacy.lo `test -f 'hd-plugin-loader-legacy.c' || echo '$(srcdir)/'`hd-plugin-loader-legacy.c

hildon_desktop-hd-home-window.o: hd-home-window.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-home-window.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-home-window.Tpo" \
	  -c -o hildon_desktop-hd-home-window.o `test -f 'hd-home-window.c' || echo '$(srcdir)/'`hd-home-window.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-home-window.Tpo" "$(DEPDIR)/hildon_desktop-hd-home-window.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-home-window.Tpo"; exit 1; \
	fi
#	source='hd-home-window.c' object='hildon_desktop-hd-home-window.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-home-window.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-home-window.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-home-window.o `test -f 'hd-home-window.c' || echo '$(srcdir)/'`hd-home-window.c

hildon_desktop-hd-home-window.obj: hd-home-window.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-home-window.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-home-window.Tpo" \
	  -c -o hildon_desktop-hd-home-window.obj `if test -f 'hd-home-window.c'; then $(CYGPATH_W) 'hd-home-window.c'; else $(CYGPATH_W) '$(srcdir)/hd-home-window.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-home-window.Tpo" "$(DEPDIR)/hildon_desktop-hd-home-window.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-home-window.Tpo"; exit 1; \
	fi
#	source='hd-home-window.c' object='hildon_desktop-hd-home-window.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-home-window.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-home-window.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-home-window.obj `if test -f 'hd-home-window.c'; then $(CYGPATH_W) 'hd-home-window.c'; else $(CYGPATH_W) '$(srcdir)/hd-home-window.c'; fi`

hildon_desktop-hd-home-window.lo: hd-home-window.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-home-window.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-home-window.Tpo" \
	  -c -o hildon_desktop-hd-home-window.lo `test -f 'hd-home-window.c' || echo '$(srcdir)/'`hd-home-window.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-home-window.Tpo" "$(DEPDIR)/hildon_desktop-hd-home-window.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-home-window.Tpo"; exit 1; \
	fi
#	source='hd-home-window.c' object='hildon_desktop-hd-home-window.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-home-window.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-home-window.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-home-window.lo `test -f 'hd-home-window.c' || echo '$(srcdir)/'`hd-home-window.c

hildon_desktop-hd-home-background-dialog.o: hd-home-background-dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-home-background-dialog.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Tpo" \
	  -c -o hildon_desktop-hd-home-background-dialog.o `test -f 'hd-home-background-dialog.c' || echo '$(srcdir)/'`hd-home-background-dialog.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Tpo" "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Tpo"; exit 1; \
	fi
#	source='hd-home-background-dialog.c' object='hildon_desktop-hd-home-background-dialog.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-home-background-dialog.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-home-background-dialog.o `test -f 'hd-home-background-dialog.c' || echo '$(srcdir)/'`hd-home-background-dialog.c

hildon_desktop-hd-home-background-dialog.obj: hd-home-background-dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-home-background-dialog.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Tpo" \
	  -c -o hildon_desktop-hd-home-background-dialog.obj `if test -f 'hd-home-background-dialog.c'; then $(CYGPATH_W) 'hd-home-background-dialog.c'; else $(CYGPATH_W) '$(srcdir)/hd-home-background-dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Tpo" "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Tpo"; exit 1; \
	fi
#	source='hd-home-background-dialog.c' object='hildon_desktop-hd-home-background-dialog.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-home-background-dialog.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-home-background-dialog.obj `if test -f 'hd-home-background-dialog.c'; then $(CYGPATH_W) 'hd-home-background-dialog.c'; else $(CYGPATH_W) '$(srcdir)/hd-home-background-dialog.c'; fi`

hildon_desktop-hd-home-background-dialog.lo: hd-home-background-dialog.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-home-background-dialog.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Tpo" \
	  -c -o hildon_desktop-hd-home-background-dialog.lo `test -f 'hd-home-background-dialog.c' || echo '$(srcdir)/'`hd-home-background-dialog.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Tpo" "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Tpo"; exit 1; \
	fi
#	source='hd-home-background-dialog.c' object='hildon_desktop-hd-home-background-dialog.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-home-background-dialog.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-home-background-dialog.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-home-background-dialog.lo `test -f 'hd-home-background-dialog.c' || echo '$(srcdir)/'`hd-home-background-dialog.c

hildon_desktop-hd-home-background.o: hd-home-background.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-home-background.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-home-background.Tpo" \
	  -c -o hildon_desktop-hd-home-background.o `test -f 'hd-home-background.c' || echo '$(srcdir)/'`hd-home-background.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-home-background.Tpo" "$(DEPDIR)/hildon_desktop-hd-home-background.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-home-background.Tpo"; exit 1; \
	fi
#	source='hd-home-background.c' object='hildon_desktop-hd-home-background.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-home-background.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-home-background.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-home-background.o `test -f 'hd-home-background.c' || echo '$(srcdir)/'`hd-home-background.c

hildon_desktop-hd-home-background.obj: hd-home-background.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-home-background.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-home-background.Tpo" \
	  -c -o hildon_desktop-hd-home-background.obj `if test -f 'hd-home-background.c'; then $(CYGPATH_W) 'hd-home-background.c'; else $(CYGPATH_W) '$(srcdir)/hd-home-background.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-home-background.Tpo" "$(DEPDIR)/hildon_desktop-hd-home-background.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-home-background.Tpo"; exit 1; \
	fi
#	source='hd-home-background.c' object='hildon_desktop-hd-home-background.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-home-background.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-home-background.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-home-background.obj `if test -f 'hd-home-background.c'; then $(CYGPATH_W) 'hd-home-background.c'; else $(CYGPATH_W) '$(srcdir)/hd-home-background.c'; fi`

hildon_desktop-hd-home-background.lo: hd-home-background.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-home-background.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-home-background.Tpo" \
	  -c -o hildon_desktop-hd-home-background.lo `test -f 'hd-home-background.c' || echo '$(srcdir)/'`hd-home-background.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-home-background.Tpo" "$(DEPDIR)/hildon_desktop-hd-home-background.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-home-background.Tpo"; exit 1; \
	fi
#	source='hd-home-background.c' object='hildon_desktop-hd-home-background.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-home-background.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-home-background.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-home-background.lo `test -f 'hd-home-background.c' || echo '$(srcdir)/'`hd-home-background.c

hildon_desktop-hn-app-pixbuf-anim-blinker.o: hn-app-pixbuf-anim-blinker.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-pixbuf-anim-blinker.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Tpo" \
	  -c -o hildon_desktop-hn-app-pixbuf-anim-blinker.o `test -f 'hn-app-pixbuf-anim-blinker.c' || echo '$(srcdir)/'`hn-app-pixbuf-anim-blinker.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Tpo"; exit 1; \
	fi
#	source='hn-app-pixbuf-anim-blinker.c' object='hildon_desktop-hn-app-pixbuf-anim-blinker.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-pixbuf-anim-blinker.o `test -f 'hn-app-pixbuf-anim-blinker.c' || echo '$(srcdir)/'`hn-app-pixbuf-anim-blinker.c

hildon_desktop-hn-app-pixbuf-anim-blinker.obj: hn-app-pixbuf-anim-blinker.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-pixbuf-anim-blinker.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Tpo" \
	  -c -o hildon_desktop-hn-app-pixbuf-anim-blinker.obj `if test -f 'hn-app-pixbuf-anim-blinker.c'; then $(CYGPATH_W) 'hn-app-pixbuf-anim-blinker.c'; else $(CYGPATH_W) '$(srcdir)/hn-app-pixbuf-anim-blinker.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Tpo"; exit 1; \
	fi
#	source='hn-app-pixbuf-anim-blinker.c' object='hildon_desktop-hn-app-pixbuf-anim-blinker.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-pixbuf-anim-blinker.obj `if test -f 'hn-app-pixbuf-anim-blinker.c'; then $(CYGPATH_W) 'hn-app-pixbuf-anim-blinker.c'; else $(CYGPATH_W) '$(srcdir)/hn-app-pixbuf-anim-blinker.c'; fi`

hildon_desktop-hn-app-pixbuf-anim-blinker.lo: hn-app-pixbuf-anim-blinker.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-pixbuf-anim-blinker.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Tpo" \
	  -c -o hildon_desktop-hn-app-pixbuf-anim-blinker.lo `test -f 'hn-app-pixbuf-anim-blinker.c' || echo '$(srcdir)/'`hn-app-pixbuf-anim-blinker.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Tpo"; exit 1; \
	fi
#	source='hn-app-pixbuf-anim-blinker.c' object='hildon_desktop-hn-app-pixbuf-anim-blinker.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-pixbuf-anim-blinker.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-pixbuf-anim-blinker.lo `test -f 'hn-app-pixbuf-anim-blinker.c' || echo '$(srcdir)/'`hn-app-pixbuf-anim-blinker.c

hildon_desktop-hn-app-button.o: hn-app-button.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-button.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-button.Tpo" \
	  -c -o hildon_desktop-hn-app-button.o `test -f 'hn-app-button.c' || echo '$(srcdir)/'`hn-app-button.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-button.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-button.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-button.Tpo"; exit 1; \
	fi
#	source='hn-app-button.c' object='hildon_desktop-hn-app-button.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-button.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-button.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-button.o `test -f 'hn-app-button.c' || echo '$(srcdir)/'`hn-app-button.c

hildon_desktop-hn-app-button.obj: hn-app-button.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-button.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-button.Tpo" \
	  -c -o hildon_desktop-hn-app-button.obj `if test -f 'hn-app-button.c'; then $(CYGPATH_W) 'hn-app-button.c'; else $(CYGPATH_W) '$(srcdir)/hn-app-button.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-button.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-button.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-button.Tpo"; exit 1; \
	fi
#	source='hn-app-button.c' object='hildon_desktop-hn-app-button.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-button.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-button.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-button.obj `if test -f 'hn-app-button.c'; then $(CYGPATH_W) 'hn-app-button.c'; else $(CYGPATH_W) '$(srcdir)/hn-app-button.c'; fi`

hildon_desktop-hn-app-button.lo: hn-app-button.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-button.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-button.Tpo" \
	  -c -o hildon_desktop-hn-app-button.lo `test -f 'hn-app-button.c' || echo '$(srcdir)/'`hn-app-button.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-button.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-button.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-button.Tpo"; exit 1; \
	fi
#	source='hn-app-button.c' object='hildon_desktop-hn-app-button.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-button.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-button.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-button.lo `test -f 'hn-app-button.c' || echo '$(srcdir)/'`hn-app-button.c

hildon_desktop-hn-app-sound.o: hn-app-sound.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-sound.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-sound.Tpo" \
	  -c -o hildon_desktop-hn-app-sound.o `test -f 'hn-app-sound.c' || echo '$(srcdir)/'`hn-app-sound.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-sound.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-sound.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-sound.Tpo"; exit 1; \
	fi
#	source='hn-app-sound.c' object='hildon_desktop-hn-app-sound.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-sound.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-sound.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-sound.o `test -f 'hn-app-sound.c' || echo '$(srcdir)/'`hn-app-sound.c

hildon_desktop-hn-app-sound.obj: hn-app-sound.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-sound.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-sound.Tpo" \
	  -c -o hildon_desktop-hn-app-sound.obj `if test -f 'hn-app-sound.c'; then $(CYGPATH_W) 'hn-app-sound.c'; else $(CYGPATH_W) '$(srcdir)/hn-app-sound.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-sound.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-sound.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-sound.Tpo"; exit 1; \
	fi
#	source='hn-app-sound.c' object='hildon_desktop-hn-app-sound.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-sound.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-sound.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-sound.obj `if test -f 'hn-app-sound.c'; then $(CYGPATH_W) 'hn-app-sound.c'; else $(CYGPATH_W) '$(srcdir)/hn-app-sound.c'; fi`

hildon_desktop-hn-app-sound.lo: hn-app-sound.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-sound.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-sound.Tpo" \
	  -c -o hildon_desktop-hn-app-sound.lo `test -f 'hn-app-sound.c' || echo '$(srcdir)/'`hn-app-sound.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-sound.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-sound.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-sound.Tpo"; exit 1; \
	fi
#	source='hn-app-sound.c' object='hildon_desktop-hn-app-sound.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-sound.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-sound.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-sound.lo `test -f 'hn-app-sound.c' || echo '$(srcdir)/'`hn-app-sound.c

hildon_desktop-hn-app-switcher.o: hn-app-switcher.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-switcher.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-switcher.Tpo" \
	  -c -o hildon_desktop-hn-app-switcher.o `test -f 'hn-app-switcher.c' || echo '$(srcdir)/'`hn-app-switcher.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-switcher.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-switcher.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-switcher.Tpo"; exit 1; \
	fi
#	source='hn-app-switcher.c' object='hildon_desktop-hn-app-switcher.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-switcher.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-switcher.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-switcher.o `test -f 'hn-app-switcher.c' || echo '$(srcdir)/'`hn-app-switcher.c

hildon_desktop-hn-app-switcher.obj: hn-app-switcher.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-switcher.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-switcher.Tpo" \
	  -c -o hildon_desktop-hn-app-switcher.obj `if test -f 'hn-app-switcher.c'; then $(CYGPATH_W) 'hn-app-switcher.c'; else $(CYGPATH_W) '$(srcdir)/hn-app-switcher.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-switcher.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-switcher.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-switcher.Tpo"; exit 1; \
	fi
#	source='hn-app-switcher.c' object='hildon_desktop-hn-app-switcher.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-switcher.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-switcher.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-switcher.obj `if test -f 'hn-app-switcher.c'; then $(CYGPATH_W) 'hn-app-switcher.c'; else $(CYGPATH_W) '$(srcdir)/hn-app-switcher.c'; fi`

hildon_desktop-hn-app-switcher.lo: hn-app-switcher.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-switcher.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-switcher.Tpo" \
	  -c -o hildon_desktop-hn-app-switcher.lo `test -f 'hn-app-switcher.c' || echo '$(srcdir)/'`hn-app-switcher.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-switcher.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-switcher.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-switcher.Tpo"; exit 1; \
	fi
#	source='hn-app-switcher.c' object='hildon_desktop-hn-app-switcher.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-switcher.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-switcher.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-switcher.lo `test -f 'hn-app-switcher.c' || echo '$(srcdir)/'`hn-app-switcher.c

hildon_desktop-hn-app-tooltip.o: hn-app-tooltip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-tooltip.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Tpo" \
	  -c -o hildon_desktop-hn-app-tooltip.o `test -f 'hn-app-tooltip.c' || echo '$(srcdir)/'`hn-app-tooltip.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Tpo"; exit 1; \
	fi
#	source='hn-app-tooltip.c' object='hildon_desktop-hn-app-tooltip.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-tooltip.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-tooltip.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-tooltip.o `test -f 'hn-app-tooltip.c' || echo '$(srcdir)/'`hn-app-tooltip.c

hildon_desktop-hn-app-tooltip.obj: hn-app-tooltip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-tooltip.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Tpo" \
	  -c -o hildon_desktop-hn-app-tooltip.obj `if test -f 'hn-app-tooltip.c'; then $(CYGPATH_W) 'hn-app-tooltip.c'; else $(CYGPATH_W) '$(srcdir)/hn-app-tooltip.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Tpo"; exit 1; \
	fi
#	source='hn-app-tooltip.c' object='hildon_desktop-hn-app-tooltip.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-tooltip.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-tooltip.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-tooltip.obj `if test -f 'hn-app-tooltip.c'; then $(CYGPATH_W) 'hn-app-tooltip.c'; else $(CYGPATH_W) '$(srcdir)/hn-app-tooltip.c'; fi`

hildon_desktop-hn-app-tooltip.lo: hn-app-tooltip.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-app-tooltip.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Tpo" \
	  -c -o hildon_desktop-hn-app-tooltip.lo `test -f 'hn-app-tooltip.c' || echo '$(srcdir)/'`hn-app-tooltip.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Tpo" "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-app-tooltip.Tpo"; exit 1; \
	fi
#	source='hn-app-tooltip.c' object='hildon_desktop-hn-app-tooltip.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hn-app-tooltip.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-app-tooltip.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-app-tooltip.lo `test -f 'hn-app-tooltip.c' || echo '$(srcdir)/'`hn-app-tooltip.c

hildon_desktop-hd-switcher-menu.o: hd-switcher-menu.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-switcher-menu.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Tpo" \
	  -c -o hildon_desktop-hd-switcher-menu.o `test -f 'hd-switcher-menu.c' || echo '$(srcdir)/'`hd-switcher-menu.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Tpo" "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Tpo"; exit 1; \
	fi
#	source='hd-switcher-menu.c' object='hildon_desktop-hd-switcher-menu.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-switcher-menu.o `test -f 'hd-switcher-menu.c' || echo '$(srcdir)/'`hd-switcher-menu.c

hildon_desktop-hd-switcher-menu.obj: hd-switcher-menu.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-switcher-menu.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Tpo" \
	  -c -o hildon_desktop-hd-switcher-menu.obj `if test -f 'hd-switcher-menu.c'; then $(CYGPATH_W) 'hd-switcher-menu.c'; else $(CYGPATH_W) '$(srcdir)/hd-switcher-menu.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Tpo" "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Tpo"; exit 1; \
	fi
#	source='hd-switcher-menu.c' object='hildon_desktop-hd-switcher-menu.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-switcher-menu.obj `if test -f 'hd-switcher-menu.c'; then $(CYGPATH_W) 'hd-switcher-menu.c'; else $(CYGPATH_W) '$(srcdir)/hd-switcher-menu.c'; fi`

hildon_desktop-hd-switcher-menu.lo: hd-switcher-menu.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-switcher-menu.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Tpo" \
	  -c -o hildon_desktop-hd-switcher-menu.lo `test -f 'hd-switcher-menu.c' || echo '$(srcdir)/'`hd-switcher-menu.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Tpo" "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu.Tpo"; exit 1; \
	fi
#	source='hd-switcher-menu.c' object='hildon_desktop-hd-switcher-menu.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-switcher-menu.lo `test -f 'hd-switcher-menu.c' || echo '$(srcdir)/'`hd-switcher-menu.c

hildon_desktop-hd-switcher-menu-item.o: hd-switcher-menu-item.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-switcher-menu-item.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Tpo" \
	  -c -o hildon_desktop-hd-switcher-menu-item.o `test -f 'hd-switcher-menu-item.c' || echo '$(srcdir)/'`hd-switcher-menu-item.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Tpo" "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Tpo"; exit 1; \
	fi
#	source='hd-switcher-menu-item.c' object='hildon_desktop-hd-switcher-menu-item.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-switcher-menu-item.o `test -f 'hd-switcher-menu-item.c' || echo '$(srcdir)/'`hd-switcher-menu-item.c

hildon_desktop-hd-switcher-menu-item.obj: hd-switcher-menu-item.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-switcher-menu-item.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Tpo" \
	  -c -o hildon_desktop-hd-switcher-menu-item.obj `if test -f 'hd-switcher-menu-item.c'; then $(CYGPATH_W) 'hd-switcher-menu-item.c'; else $(CYGPATH_W) '$(srcdir)/hd-switcher-menu-item.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Tpo" "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Tpo"; exit 1; \
	fi
#	source='hd-switcher-menu-item.c' object='hildon_desktop-hd-switcher-menu-item.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-switcher-menu-item.obj `if test -f 'hd-switcher-menu-item.c'; then $(CYGPATH_W) 'hd-switcher-menu-item.c'; else $(CYGPATH_W) '$(srcdir)/hd-switcher-menu-item.c'; fi`

hildon_desktop-hd-switcher-menu-item.lo: hd-switcher-menu-item.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-switcher-menu-item.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Tpo" \
	  -c -o hildon_desktop-hd-switcher-menu-item.lo `test -f 'hd-switcher-menu-item.c' || echo '$(srcdir)/'`hd-switcher-menu-item.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Tpo" "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Tpo"; exit 1; \
	fi
#	source='hd-switcher-menu-item.c' object='hildon_desktop-hd-switcher-menu-item.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-switcher-menu-item.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-switcher-menu-item.lo `test -f 'hd-switcher-menu-item.c' || echo '$(srcdir)/'`hd-switcher-menu-item.c

hildon_desktop-hd-applications-menu.o: hd-applications-menu.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-applications-menu.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-applications-menu.Tpo" \
	  -c -o hildon_desktop-hd-applications-menu.o `test -f 'hd-applications-menu.c' || echo '$(srcdir)/'`hd-applications-menu.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-applications-menu.Tpo" "$(DEPDIR)/hildon_desktop-hd-applications-menu.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-applications-menu.Tpo"; exit 1; \
	fi
#	source='hd-applications-menu.c' object='hildon_desktop-hd-applications-menu.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-applications-menu.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-applications-menu.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-applications-menu.o `test -f 'hd-applications-menu.c' || echo '$(srcdir)/'`hd-applications-menu.c

hildon_desktop-hd-applications-menu.obj: hd-applications-menu.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-applications-menu.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-applications-menu.Tpo" \
	  -c -o hildon_desktop-hd-applications-menu.obj `if test -f 'hd-applications-menu.c'; then $(CYGPATH_W) 'hd-applications-menu.c'; else $(CYGPATH_W) '$(srcdir)/hd-applications-menu.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-applications-menu.Tpo" "$(DEPDIR)/hildon_desktop-hd-applications-menu.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-applications-menu.Tpo"; exit 1; \
	fi
#	source='hd-applications-menu.c' object='hildon_desktop-hd-applications-menu.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-applications-menu.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-applications-menu.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-applications-menu.obj `if test -f 'hd-applications-menu.c'; then $(CYGPATH_W) 'hd-applications-menu.c'; else $(CYGPATH_W) '$(srcdir)/hd-applications-menu.c'; fi`

hildon_desktop-hd-applications-menu.lo: hd-applications-menu.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-applications-menu.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-applications-menu.Tpo" \
	  -c -o hildon_desktop-hd-applications-menu.lo `test -f 'hd-applications-menu.c' || echo '$(srcdir)/'`hd-applications-menu.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-applications-menu.Tpo" "$(DEPDIR)/hildon_desktop-hd-applications-menu.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-applications-menu.Tpo"; exit 1; \
	fi
#	source='hd-applications-menu.c' object='hildon_desktop-hd-applications-menu.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-applications-menu.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-applications-menu.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-applications-menu.lo `test -f 'hd-applications-menu.c' || echo '$(srcdir)/'`hd-applications-menu.c

hildon_desktop-hn-others-button.o: hn-others-button.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-others-button.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-others-button.Tpo" \
	  -c -o hildon_desktop-hn-others-button.o `test -f 'hn-others-button.c' || echo '$(srcdir)/'`hn-others-button.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-others-button.Tpo" "$(DEPDIR)/hildon_desktop-hn-others-button.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-others-button.Tpo"; exit 1; \
	fi
#	source='hn-others-button.c' object='hildon_desktop-hn-others-button.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-others-button.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-others-button.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-others-button.o `test -f 'hn-others-button.c' || echo '$(srcdir)/'`hn-others-button.c

hildon_desktop-hn-others-button.obj: hn-others-button.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-others-button.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-others-button.Tpo" \
	  -c -o hildon_desktop-hn-others-button.obj `if test -f 'hn-others-button.c'; then $(CYGPATH_W) 'hn-others-button.c'; else $(CYGPATH_W) '$(srcdir)/hn-others-button.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-others-button.Tpo" "$(DEPDIR)/hildon_desktop-hn-others-button.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-others-button.Tpo"; exit 1; \
	fi
#	source='hn-others-button.c' object='hildon_desktop-hn-others-button.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hn-others-button.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-others-button.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-others-button.obj `if test -f 'hn-others-button.c'; then $(CYGPATH_W) 'hn-others-button.c'; else $(CYGPATH_W) '$(srcdir)/hn-others-button.c'; fi`

hildon_desktop-hn-others-button.lo: hn-others-button.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hn-others-button.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hn-others-button.Tpo" \
	  -c -o hildon_desktop-hn-others-button.lo `test -f 'hn-others-button.c' || echo '$(srcdir)/'`hn-others-button.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hn-others-button.Tpo" "$(DEPDIR)/hildon_desktop-hn-others-button.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hn-others-button.Tpo"; exit 1; \
	fi
#	source='hn-others-button.c' object='hildon_desktop-hn-others-button.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hn-others-button.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hn-others-button.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hn-others-button.lo `test -f 'hn-others-button.c' || echo '$(srcdir)/'`hn-others-button.c

hildon_desktop-hd-desktop.o: hd-desktop.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-desktop.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-desktop.Tpo" \
	  -c -o hildon_desktop-hd-desktop.o `test -f 'hd-desktop.c' || echo '$(srcdir)/'`hd-desktop.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-desktop.Tpo" "$(DEPDIR)/hildon_desktop-hd-desktop.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-desktop.Tpo"; exit 1; \
	fi
#	source='hd-desktop.c' object='hildon_desktop-hd-desktop.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-desktop.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-desktop.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-desktop.o `test -f 'hd-desktop.c' || echo '$(srcdir)/'`hd-desktop.c

hildon_desktop-hd-desktop.obj: hd-desktop.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-desktop.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-desktop.Tpo" \
	  -c -o hildon_desktop-hd-desktop.obj `if test -f 'hd-desktop.c'; then $(CYGPATH_W) 'hd-desktop.c'; else $(CYGPATH_W) '$(srcdir)/hd-desktop.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-desktop.Tpo" "$(DEPDIR)/hildon_desktop-hd-desktop.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-desktop.Tpo"; exit 1; \
	fi
#	source='hd-desktop.c' object='hildon_desktop-hd-desktop.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-desktop.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-desktop.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-desktop.obj `if test -f 'hd-desktop.c'; then $(CYGPATH_W) 'hd-desktop.c'; else $(CYGPATH_W) '$(srcdir)/hd-desktop.c'; fi`

hildon_desktop-hd-desktop.lo: hd-desktop.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-desktop.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-desktop.Tpo" \
	  -c -o hildon_desktop-hd-desktop.lo `test -f 'hd-desktop.c' || echo '$(srcdir)/'`hd-desktop.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-desktop.Tpo" "$(DEPDIR)/hildon_desktop-hd-desktop.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-desktop.Tpo"; exit 1; \
	fi
#	source='hd-desktop.c' object='hildon_desktop-hd-desktop.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-desktop.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-desktop.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-desktop.lo `test -f 'hd-desktop.c' || echo '$(srcdir)/'`hd-desktop.c

hildon_desktop-hd-select-plugins-dialog.o: hd-select-plugins-dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-select-plugins-dialog.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Tpo" \
	  -c -o hildon_desktop-hd-select-plugins-dialog.o `test -f 'hd-select-plugins-dialog.c' || echo '$(srcdir)/'`hd-select-plugins-dialog.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Tpo" "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Tpo"; exit 1; \
	fi
#	source='hd-select-plugins-dialog.c' object='hildon_desktop-hd-select-plugins-dialog.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-select-plugins-dialog.o `test -f 'hd-select-plugins-dialog.c' || echo '$(srcdir)/'`hd-select-plugins-dialog.c

hildon_desktop-hd-select-plugins-dialog.obj: hd-select-plugins-dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-select-plugins-dialog.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Tpo" \
	  -c -o hildon_desktop-hd-select-plugins-dialog.obj `if test -f 'hd-select-plugins-dialog.c'; then $(CYGPATH_W) 'hd-select-plugins-dialog.c'; else $(CYGPATH_W) '$(srcdir)/hd-select-plugins-dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Tpo" "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Tpo"; exit 1; \
	fi
#	source='hd-select-plugins-dialog.c' object='hildon_desktop-hd-select-plugins-dialog.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-select-plugins-dialog.obj `if test -f 'hd-select-plugins-dialog.c'; then $(CYGPATH_W) 'hd-select-plugins-dialog.c'; else $(CYGPATH_W) '$(srcdir)/hd-select-plugins-dialog.c'; fi`

hildon_desktop-hd-select-plugins-dialog.lo: hd-select-plugins-dialog.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-select-plugins-dialog.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Tpo" \
	  -c -o hildon_desktop-hd-select-plugins-dialog.lo `test -f 'hd-select-plugins-dialog.c' || echo '$(srcdir)/'`hd-select-plugins-dialog.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Tpo" "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Tpo"; exit 1; \
	fi
#	source='hd-select-plugins-dialog.c' object='hildon_desktop-hd-select-plugins-dialog.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-select-plugins-dialog.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-select-plugins-dialog.lo `test -f 'hd-select-plugins-dialog.c' || echo '$(srcdir)/'`hd-select-plugins-dialog.c

hildon_desktop-hd-panel-window.o: hd-panel-window.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-panel-window.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-panel-window.Tpo" \
	  -c -o hildon_desktop-hd-panel-window.o `test -f 'hd-panel-window.c' || echo '$(srcdir)/'`hd-panel-window.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-panel-window.Tpo" "$(DEPDIR)/hildon_desktop-hd-panel-window.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-panel-window.Tpo"; exit 1; \
	fi
#	source='hd-panel-window.c' object='hildon_desktop-hd-panel-window.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-panel-window.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-panel-window.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-panel-window.o `test -f 'hd-panel-window.c' || echo '$(srcdir)/'`hd-panel-window.c

hildon_desktop-hd-panel-window.obj: hd-panel-window.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-panel-window.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-panel-window.Tpo" \
	  -c -o hildon_desktop-hd-panel-window.obj `if test -f 'hd-panel-window.c'; then $(CYGPATH_W) 'hd-panel-window.c'; else $(CYGPATH_W) '$(srcdir)/hd-panel-window.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-panel-window.Tpo" "$(DEPDIR)/hildon_desktop-hd-panel-window.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-panel-window.Tpo"; exit 1; \
	fi
#	source='hd-panel-window.c' object='hildon_desktop-hd-panel-window.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-panel-window.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-panel-window.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-panel-window.obj `if test -f 'hd-panel-window.c'; then $(CYGPATH_W) 'hd-panel-window.c'; else $(CYGPATH_W) '$(srcdir)/hd-panel-window.c'; fi`

hildon_desktop-hd-panel-window.lo: hd-panel-window.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-panel-window.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-panel-window.Tpo" \
	  -c -o hildon_desktop-hd-panel-window.lo `test -f 'hd-panel-window.c' || echo '$(srcdir)/'`hd-panel-window.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-panel-window.Tpo" "$(DEPDIR)/hildon_desktop-hd-panel-window.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-panel-window.Tpo"; exit 1; \
	fi
#	source='hd-panel-window.c' object='hildon_desktop-hd-panel-window.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-panel-window.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-panel-window.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-panel-window.lo `test -f 'hd-panel-window.c' || echo '$(srcdir)/'`hd-panel-window.c

hildon_desktop-hd-panel-window-dialog.o: hd-panel-window-dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-panel-window-dialog.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Tpo" \
	  -c -o hildon_desktop-hd-panel-window-dialog.o `test -f 'hd-panel-window-dialog.c' || echo '$(srcdir)/'`hd-panel-window-dialog.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Tpo" "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Tpo"; exit 1; \
	fi
#	source='hd-panel-window-dialog.c' object='hildon_desktop-hd-panel-window-dialog.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-panel-window-dialog.o `test -f 'hd-panel-window-dialog.c' || echo '$(srcdir)/'`hd-panel-window-dialog.c

hildon_desktop-hd-panel-window-dialog.obj: hd-panel-window-dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-panel-window-dialog.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Tpo" \
	  -c -o hildon_desktop-hd-panel-window-dialog.obj `if test -f 'hd-panel-window-dialog.c'; then $(CYGPATH_W) 'hd-panel-window-dialog.c'; else $(CYGPATH_W) '$(srcdir)/hd-panel-window-dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Tpo" "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Tpo"; exit 1; \
	fi
#	source='hd-panel-window-dialog.c' object='hildon_desktop-hd-panel-window-dialog.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-panel-window-dialog.obj `if test -f 'hd-panel-window-dialog.c'; then $(CYGPATH_W) 'hd-panel-window-dialog.c'; else $(CYGPATH_W) '$(srcdir)/hd-panel-window-dialog.c'; fi`

hildon_desktop-hd-panel-window-dialog.lo: hd-panel-window-dialog.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-hd-panel-window-dialog.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Tpo" \
	  -c -o hildon_desktop-hd-panel-window-dialog.lo `test -f 'hd-panel-window-dialog.c' || echo '$(srcdir)/'`hd-panel-window-dialog.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Tpo" "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Tpo"; exit 1; \
	fi
#	source='hd-panel-window-dialog.c' object='hildon_desktop-hd-panel-window-dialog.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-hd-panel-window-dialog.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-hd-panel-window-dialog.lo `test -f 'hd-panel-window-dialog.c' || echo '$(srcdir)/'`hd-panel-window-dialog.c

hildon_desktop-main.o: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-main.o -MD -MP -MF "$(DEPDIR)/hildon_desktop-main.Tpo" \
	  -c -o hildon_desktop-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-main.Tpo" "$(DEPDIR)/hildon_desktop-main.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='hildon_desktop-main.o' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-main.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

hildon_desktop-main.obj: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-main.obj -MD -MP -MF "$(DEPDIR)/hildon_desktop-main.Tpo" \
	  -c -o hildon_desktop-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_desktop-main.Tpo" "$(DEPDIR)/hildon_desktop-main.Po"; \
	else rm -f "$(DEPDIR)/hildon_desktop-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='hildon_desktop-main.obj' libtool=no \
#	depfile='$(DEPDIR)/hildon_desktop-main.Po' tmpdepfile='$(DEPDIR)/hildon_desktop-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

hildon_desktop-main.lo: main.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hildon_desktop-main.lo -MD -MP -MF "$(DEPDIR)/hildon_desktop-main.Tpo" \
	  -c -o hildon_desktop-main.lo `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
	then mv -f "$(DEPDIR)/hildon_desktop-main.Tpo" "$(DEPDIR)/hildon_desktop-main.Plo"; \
	else rm -f "$(DEPDIR)/hildon_desktop-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='hildon_desktop-main.lo' libtool=yes \
#	depfile='$(DEPDIR)/hildon_desktop-main.Plo' tmpdepfile='$(DEPDIR)/hildon_desktop-main.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_desktop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hildon_desktop-main.lo `test -f 'main.c' || echo '$(srcdir)/'`main.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
pkgconfigDATA_INSTALL = $(INSTALL_DATA)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgconfigdir)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgconfigDATA_INSTALL) $$d$$p $(DESTDIR)$(pkgconfigdir)/$$f"; \
	  $(pkgconfigDATA_INSTALL) $$d$$p $(DESTDIR)$(pkgconfigdir)/$$f; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgconfigdir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgconfigdir)/$$f; \
	done
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(pluginlibdir) $(DESTDIR)$(bindir) $(DESTDIR)$(pkgconfigdir) $(DESTDIR)$(pkgincludedir)
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-pluginlibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-pkgconfigDATA install-pkgincludeHEADERS \
	install-pluginlibLTLIBRARIES

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-pkgconfigDATA uninstall-pkgincludeHEADERS \
	uninstall-pluginlibLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-pluginlibLTLIBRARIES ctags \
	distclean distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-pkgconfigDATA install-pkgincludeHEADERS \
	install-pluginlibLTLIBRARIES install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-pkgconfigDATA \
	uninstall-pkgincludeHEADERS uninstall-pluginlibLTLIBRARIES


hd-panel-window-dialog-service.h: statusbar.xml
	dbus-binding-tool --prefix=hd_panel_window_dialog_service --mode=glib-server --output=hd-panel-window-dialog-service.h $<

hd-marshalers.c:
	$(LIBTOOL) --mode=execute $(GLIB_GENMARSHAL) hd-marshalers.list --body --header >> hd-marshalers.c

hd-marshalers.h:
	$(LIBTOOL) --mode=execute $(GLIB_GENMARSHAL) hd-marshalers.list --header >> hd-marshalers.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
