# Makefile.in generated by automake 1.7.9 from Makefile.am.
# policies/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/hildon-desktop
pkglibdir = $(libdir)/hildon-desktop
pkgincludedir = $(includedir)/hildon-desktop
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /home/bruce/bin/install-check
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run aclocal-1.7
ALL_LINGUAS = en_GB
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run automake-1.7
AWK = mawk
CATALOGS =  en_GB.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wmissing-prototypes -Wmissing-declarations -Wno-format-extra-args
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DBUS_BINDING_TOOL = /usr/bin/dbus-binding-tool
DBUS_GLIB_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
DBUS_GLIB_LIBS = -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lglib-2.0  
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_GTK_DOC_FALSE = 
ENABLE_GTK_DOC_TRUE = #
EXEEXT = 
F77 = 
FFLAGS = 
GCONF_CFLAGS = -DORBIT2=1 -pthread -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GCONF_LIBS = -lgconf-2 -lglib-2.0  
GDK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/cairo -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
GDK_LIBS = -lgdk-x11-2.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
GLIB_GENMARSHAL = /usr/bin/glib-genmarshal
GMOFILES =  en_GB.gmo
GMSGFMT = /usr/bin/msgfmt
GNOME_VFS_CFLAGS = -pthread -DORBIT2=1 -I/usr/include/gnome-vfs-2.0 -I/usr/lib/gnome-vfs-2.0/include -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GNOME_VFS_LIBS = -pthread -lgnomevfs-2 -lgconf-2 -lgthread-2.0 -lrt -lgmodule-2.0 -ldl -lgobject-2.0 -lglib-2.0  
GREP = /bin/grep
GTKDOC_CHECK = /usr/bin/gtkdoc-check
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
GTK_DOC_USE_LIBTOOL_FALSE = #
GTK_DOC_USE_LIBTOOL_TRUE = 
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
HILDON_BACKGROUND_MANAGER_INTERFACE = org.maemo.hildon.background_manager
HILDON_BACKGROUND_MANAGER_OBJECT_PATH = /org/maemo/hildon/background_manager
HILDON_BACKGROUND_MANAGER_SERVICE = org.maemo.hildon.background_manager
HILDON_CFLAGS = -I/opt/hildon/include/hildon-1 -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
HILDON_FM_CFLAGS = 
HILDON_FM_LIBS = 
HILDON_HELP_CFLAGS = 
HILDON_HELP_LIBS = 
HILDON_LIBS = -L/opt/hildon/lib -lhildon-1 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LDFLAGS = -L/opt/hildon/lib 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML_CFLAGS = -I/usr/include/libxml2  
LIBXML_LIBS = -lxml2  
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run makeinfo
MCE_CFLAGS = 
MCE_LIBS = 
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
NMEDIT = 
OBJEXT = o
OSSOSETTINGS_CFLAGS = 
OSSOSETTINGS_LIBS = 
OSSO_CFLAGS = 
OSSO_LIBS = 
PACKAGE = hildon-desktop
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES =  en_GB.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SQLITE_CFLAGS = 
SQLITE_LIBS = 
STRIP = strip
USE_NLS = yes
VERSION = 2.0.19
XCOMPOSITE_CFLAGS =  
XCOMPOSITE_LIBS = -lXcomposite -lXfixes  
XDAMAGE_CFLAGS =  
XDAMAGE_LIBS = -lXdamage -lXfixes  
XGETTEXT = /usr/bin/xgettext
XLIBS_CFLAGS =  
XLIBS_ERROR_LIBS = 
XLIBS_LIBS = -lX11  
XMKMF = 
XTEST_CFLAGS =  
XTEST_LIBS = -lXtst  
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
hildoncpdesktopentrydir = ${datarootdir}/applications/hildon-control-panel
hildondesktopbackgroundsdir = ${datarootdir}/backgrounds
hildondesktopconfdir = ${prefix}/etc/hildon-desktop
hildondesktopentrydir = ${datarootdir}/applications
hildondesktoplibdir = ${exec_prefix}/lib/hildon-desktop
hildondesktopmenudir = ${prefix}/etc/xdg/menus
hildondesktopstartupdir = ${prefix}/etc/osso-af-init
hildonhomedesktopentrydir = /opt/hildon/share/applications/hildon-home
hildonhomelibdir = ${exec_prefix}/lib/hildon-home
hildonnavigatordesktopentrydir = /opt/hildon/share/applications/hildon-navigator
hildonnavigatorlibdir = ${exec_prefix}/lib/hildon-navigator
hildonpluginloaderlibdir = ${exec_prefix}/lib/hildon-desktop/loaders
hildonstatusbardesktopentrydir = /opt/hildon/share/applications/hildon-status-bar
hildonstatusbarlibdir = ${exec_prefix}/lib/hildon-status-bar
hildonuipolicylibdir = ${exec_prefix}/lib/hildon-desktop/policies
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/bruce/code/hildon/hildon-desktop/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
oldincludedir = /usr/include
pdfdir = ${docdir}
pluginlibdir = ${exec_prefix}/lib/hildon-desktop
prefix = /opt/hildon
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
hildonuipolicylib_LTLIBRARIES = libtasknavigatorpolicy.la libstatusbarpolicy.la

libtasknavigatorpolicy_la_LDFLAGS = -module -avoid-version

libtasknavigatorpolicy_la_LIBADD = \
	$(LIBHILDONDESKTOP_LIBS)   \
        $(GTK_LIBS)


libtasknavigatorpolicy_la_CFLAGS = \
	-std=c99 -rdynamic                                       \
   	$(LIBHILDONDESKTOP_CFLAGS)                               \
        $(GTK_CFLAGS) 	                                         \
	-DHD_TN_ENTRY_PATH=\"$(hildonnavigatordesktopentrydir)\" 


libtasknavigatorpolicy_la_SOURCES = \
	tasknavigator-policy.c


libstatusbarpolicy_la_LDFLAGS = -module -avoid-version

libstatusbarpolicy_la_LIBADD = \
	$(LIBHILDONDESKTOP_LIBS)   \
        $(GTK_LIBS)


libstatusbarpolicy_la_CFLAGS = \
	-std=c99 -rdynamic                                       \
   	$(LIBHILDONDESKTOP_CFLAGS)                               \
        $(GTK_CFLAGS) 	                                         \
	-DHD_SB_ENTRY_PATH=\"$(hildonstatusbardesktopentrydir)\" 


libstatusbarpolicy_la_SOURCES = \
	statusbar-policy.c


CLEANFILES = *~
subdir = policies
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(hildonuipolicylib_LTLIBRARIES)

libstatusbarpolicy_la_DEPENDENCIES =
am_libstatusbarpolicy_la_OBJECTS = \
	libstatusbarpolicy_la-statusbar-policy.lo
libstatusbarpolicy_la_OBJECTS = $(am_libstatusbarpolicy_la_OBJECTS)
libtasknavigatorpolicy_la_DEPENDENCIES =
am_libtasknavigatorpolicy_la_OBJECTS = \
	libtasknavigatorpolicy_la-tasknavigator-policy.lo
libtasknavigatorpolicy_la_OBJECTS = \
	$(am_libtasknavigatorpolicy_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = \
	./$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Plo \
	./$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libstatusbarpolicy_la_SOURCES) \
	$(libtasknavigatorpolicy_la_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
SOURCES = $(libstatusbarpolicy_la_SOURCES) $(libtasknavigatorpolicy_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  policies/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
hildonuipolicylibLTLIBRARIES_INSTALL = $(INSTALL)
install-hildonuipolicylibLTLIBRARIES: $(hildonuipolicylib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(hildonuipolicylibdir)
	@list='$(hildonuipolicylib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(hildonuipolicylibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(hildonuipolicylibdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(hildonuipolicylibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(hildonuipolicylibdir)/$$f; \
	  else :; fi; \
	done

uninstall-hildonuipolicylibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(hildonuipolicylib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(hildonuipolicylibdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(hildonuipolicylibdir)/$$p; \
	done

clean-hildonuipolicylibLTLIBRARIES:
	-test -z "$(hildonuipolicylib_LTLIBRARIES)" || rm -f $(hildonuipolicylib_LTLIBRARIES)
	@list='$(hildonuipolicylib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libstatusbarpolicy.la: $(libstatusbarpolicy_la_OBJECTS) $(libstatusbarpolicy_la_DEPENDENCIES) 
	$(LINK) -rpath $(hildonuipolicylibdir) $(libstatusbarpolicy_la_LDFLAGS) $(libstatusbarpolicy_la_OBJECTS) $(libstatusbarpolicy_la_LIBADD) $(LIBS)
libtasknavigatorpolicy.la: $(libtasknavigatorpolicy_la_OBJECTS) $(libtasknavigatorpolicy_la_DEPENDENCIES) 
	$(LINK) -rpath $(hildonuipolicylibdir) $(libtasknavigatorpolicy_la_LDFLAGS) $(libtasknavigatorpolicy_la_OBJECTS) $(libtasknavigatorpolicy_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Plo
include ./$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

libstatusbarpolicy_la-statusbar-policy.o: statusbar-policy.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstatusbarpolicy_la_CFLAGS) $(CFLAGS) -MT libstatusbarpolicy_la-statusbar-policy.o -MD -MP -MF "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Tpo" \
	  -c -o libstatusbarpolicy_la-statusbar-policy.o `test -f 'statusbar-policy.c' || echo '$(srcdir)/'`statusbar-policy.c; \
	then mv -f "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Tpo" "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Po"; \
	else rm -f "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Tpo"; exit 1; \
	fi
#	source='statusbar-policy.c' object='libstatusbarpolicy_la-statusbar-policy.o' libtool=no \
#	depfile='$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Po' tmpdepfile='$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstatusbarpolicy_la_CFLAGS) $(CFLAGS) -c -o libstatusbarpolicy_la-statusbar-policy.o `test -f 'statusbar-policy.c' || echo '$(srcdir)/'`statusbar-policy.c

libstatusbarpolicy_la-statusbar-policy.obj: statusbar-policy.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstatusbarpolicy_la_CFLAGS) $(CFLAGS) -MT libstatusbarpolicy_la-statusbar-policy.obj -MD -MP -MF "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Tpo" \
	  -c -o libstatusbarpolicy_la-statusbar-policy.obj `if test -f 'statusbar-policy.c'; then $(CYGPATH_W) 'statusbar-policy.c'; else $(CYGPATH_W) '$(srcdir)/statusbar-policy.c'; fi`; \
	then mv -f "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Tpo" "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Po"; \
	else rm -f "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Tpo"; exit 1; \
	fi
#	source='statusbar-policy.c' object='libstatusbarpolicy_la-statusbar-policy.obj' libtool=no \
#	depfile='$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Po' tmpdepfile='$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstatusbarpolicy_la_CFLAGS) $(CFLAGS) -c -o libstatusbarpolicy_la-statusbar-policy.obj `if test -f 'statusbar-policy.c'; then $(CYGPATH_W) 'statusbar-policy.c'; else $(CYGPATH_W) '$(srcdir)/statusbar-policy.c'; fi`

libstatusbarpolicy_la-statusbar-policy.lo: statusbar-policy.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstatusbarpolicy_la_CFLAGS) $(CFLAGS) -MT libstatusbarpolicy_la-statusbar-policy.lo -MD -MP -MF "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Tpo" \
	  -c -o libstatusbarpolicy_la-statusbar-policy.lo `test -f 'statusbar-policy.c' || echo '$(srcdir)/'`statusbar-policy.c; \
	then mv -f "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Tpo" "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Plo"; \
	else rm -f "$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Tpo"; exit 1; \
	fi
#	source='statusbar-policy.c' object='libstatusbarpolicy_la-statusbar-policy.lo' libtool=yes \
#	depfile='$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.Plo' tmpdepfile='$(DEPDIR)/libstatusbarpolicy_la-statusbar-policy.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstatusbarpolicy_la_CFLAGS) $(CFLAGS) -c -o libstatusbarpolicy_la-statusbar-policy.lo `test -f 'statusbar-policy.c' || echo '$(srcdir)/'`statusbar-policy.c

libtasknavigatorpolicy_la-tasknavigator-policy.o: tasknavigator-policy.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtasknavigatorpolicy_la_CFLAGS) $(CFLAGS) -MT libtasknavigatorpolicy_la-tasknavigator-policy.o -MD -MP -MF "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Tpo" \
	  -c -o libtasknavigatorpolicy_la-tasknavigator-policy.o `test -f 'tasknavigator-policy.c' || echo '$(srcdir)/'`tasknavigator-policy.c; \
	then mv -f "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Tpo" "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Po"; \
	else rm -f "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Tpo"; exit 1; \
	fi
#	source='tasknavigator-policy.c' object='libtasknavigatorpolicy_la-tasknavigator-policy.o' libtool=no \
#	depfile='$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Po' tmpdepfile='$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtasknavigatorpolicy_la_CFLAGS) $(CFLAGS) -c -o libtasknavigatorpolicy_la-tasknavigator-policy.o `test -f 'tasknavigator-policy.c' || echo '$(srcdir)/'`tasknavigator-policy.c

libtasknavigatorpolicy_la-tasknavigator-policy.obj: tasknavigator-policy.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtasknavigatorpolicy_la_CFLAGS) $(CFLAGS) -MT libtasknavigatorpolicy_la-tasknavigator-policy.obj -MD -MP -MF "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Tpo" \
	  -c -o libtasknavigatorpolicy_la-tasknavigator-policy.obj `if test -f 'tasknavigator-policy.c'; then $(CYGPATH_W) 'tasknavigator-policy.c'; else $(CYGPATH_W) '$(srcdir)/tasknavigator-policy.c'; fi`; \
	then mv -f "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Tpo" "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Po"; \
	else rm -f "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Tpo"; exit 1; \
	fi
#	source='tasknavigator-policy.c' object='libtasknavigatorpolicy_la-tasknavigator-policy.obj' libtool=no \
#	depfile='$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Po' tmpdepfile='$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtasknavigatorpolicy_la_CFLAGS) $(CFLAGS) -c -o libtasknavigatorpolicy_la-tasknavigator-policy.obj `if test -f 'tasknavigator-policy.c'; then $(CYGPATH_W) 'tasknavigator-policy.c'; else $(CYGPATH_W) '$(srcdir)/tasknavigator-policy.c'; fi`

libtasknavigatorpolicy_la-tasknavigator-policy.lo: tasknavigator-policy.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtasknavigatorpolicy_la_CFLAGS) $(CFLAGS) -MT libtasknavigatorpolicy_la-tasknavigator-policy.lo -MD -MP -MF "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Tpo" \
	  -c -o libtasknavigatorpolicy_la-tasknavigator-policy.lo `test -f 'tasknavigator-policy.c' || echo '$(srcdir)/'`tasknavigator-policy.c; \
	then mv -f "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Tpo" "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Plo"; \
	else rm -f "$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Tpo"; exit 1; \
	fi
#	source='tasknavigator-policy.c' object='libtasknavigatorpolicy_la-tasknavigator-policy.lo' libtool=yes \
#	depfile='$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.Plo' tmpdepfile='$(DEPDIR)/libtasknavigatorpolicy_la-tasknavigator-policy.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtasknavigatorpolicy_la_CFLAGS) $(CFLAGS) -c -o libtasknavigatorpolicy_la-tasknavigator-policy.lo `test -f 'tasknavigator-policy.c' || echo '$(srcdir)/'`tasknavigator-policy.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(hildonuipolicylibdir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-hildonuipolicylibLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-hildonuipolicylibLTLIBRARIES

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-hildonuipolicylibLTLIBRARIES uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-hildonuipolicylibLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-hildonuipolicylibLTLIBRARIES \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am \
	uninstall-hildonuipolicylibLTLIBRARIES uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
