# Makefile.in generated by automake 1.7.9 from Makefile.am.
# data/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/hildon-desktop
pkglibdir = $(libdir)/hildon-desktop
pkgincludedir = $(includedir)/hildon-desktop
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /home/bruce/bin/install-check
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run aclocal-1.7
ALL_LINGUAS = en_GB
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run automake-1.7
AWK = mawk
CATALOGS =  en_GB.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wmissing-prototypes -Wmissing-declarations -Wno-format-extra-args
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DBUS_BINDING_TOOL = /usr/bin/dbus-binding-tool
DBUS_GLIB_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
DBUS_GLIB_LIBS = -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lglib-2.0  
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_GTK_DOC_FALSE = 
ENABLE_GTK_DOC_TRUE = #
EXEEXT = 
F77 = 
FFLAGS = 
GCONF_CFLAGS = -DORBIT2=1 -pthread -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GCONF_LIBS = -lgconf-2 -lglib-2.0  
GDK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/cairo -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
GDK_LIBS = -lgdk-x11-2.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
GLIB_GENMARSHAL = /usr/bin/glib-genmarshal
GMOFILES =  en_GB.gmo
GMSGFMT = /usr/bin/msgfmt
GNOME_VFS_CFLAGS = -pthread -DORBIT2=1 -I/usr/include/gnome-vfs-2.0 -I/usr/lib/gnome-vfs-2.0/include -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GNOME_VFS_LIBS = -pthread -lgnomevfs-2 -lgconf-2 -lgthread-2.0 -lrt -lgmodule-2.0 -ldl -lgobject-2.0 -lglib-2.0  
GREP = /bin/grep
GTKDOC_CHECK = /usr/bin/gtkdoc-check
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
GTK_DOC_USE_LIBTOOL_FALSE = #
GTK_DOC_USE_LIBTOOL_TRUE = 
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
HILDON_BACKGROUND_MANAGER_INTERFACE = org.maemo.hildon.background_manager
HILDON_BACKGROUND_MANAGER_OBJECT_PATH = /org/maemo/hildon/background_manager
HILDON_BACKGROUND_MANAGER_SERVICE = org.maemo.hildon.background_manager
HILDON_CFLAGS = -I/opt/hildon/include/hildon-1 -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
HILDON_FM_CFLAGS = 
HILDON_FM_LIBS = 
HILDON_HELP_CFLAGS = 
HILDON_HELP_LIBS = 
HILDON_LIBS = -L/opt/hildon/lib -lhildon-1 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LDFLAGS = -L/opt/hildon/lib 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML_CFLAGS = -I/usr/include/libxml2  
LIBXML_LIBS = -lxml2  
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/bruce/code/hildon/hildon-desktop/missing --run makeinfo
MCE_CFLAGS = 
MCE_LIBS = 
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
NMEDIT = 
OBJEXT = o
OSSOSETTINGS_CFLAGS = 
OSSOSETTINGS_LIBS = 
OSSO_CFLAGS = 
OSSO_LIBS = 
PACKAGE = hildon-desktop
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES =  en_GB.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SQLITE_CFLAGS = 
SQLITE_LIBS = 
STRIP = strip
USE_NLS = yes
VERSION = 2.0.19
XCOMPOSITE_CFLAGS =  
XCOMPOSITE_LIBS = -lXcomposite -lXfixes  
XDAMAGE_CFLAGS =  
XDAMAGE_LIBS = -lXdamage -lXfixes  
XGETTEXT = /usr/bin/xgettext
XLIBS_CFLAGS =  
XLIBS_ERROR_LIBS = 
XLIBS_LIBS = -lX11  
XMKMF = 
XTEST_CFLAGS =  
XTEST_LIBS = -lXtst  
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
hildoncpdesktopentrydir = ${datarootdir}/applications/hildon-control-panel
hildondesktopbackgroundsdir = ${datarootdir}/backgrounds
hildondesktopconfdir = ${prefix}/etc/hildon-desktop
hildondesktopentrydir = ${datarootdir}/applications
hildondesktoplibdir = ${exec_prefix}/lib/hildon-desktop
hildondesktopmenudir = ${prefix}/etc/xdg/menus
hildondesktopstartupdir = ${prefix}/etc/osso-af-init
hildonhomedesktopentrydir = /opt/hildon/share/applications/hildon-home
hildonhomelibdir = ${exec_prefix}/lib/hildon-home
hildonnavigatordesktopentrydir = /opt/hildon/share/applications/hildon-navigator
hildonnavigatorlibdir = ${exec_prefix}/lib/hildon-navigator
hildonpluginloaderlibdir = ${exec_prefix}/lib/hildon-desktop/loaders
hildonstatusbardesktopentrydir = /opt/hildon/share/applications/hildon-status-bar
hildonstatusbarlibdir = ${exec_prefix}/lib/hildon-status-bar
hildonuipolicylibdir = ${exec_prefix}/lib/hildon-desktop/policies
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/bruce/code/hildon/hildon-desktop/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
oldincludedir = /usr/include
pdfdir = ${docdir}
pluginlibdir = ${exec_prefix}/lib/hildon-desktop
prefix = /opt/hildon
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
hildondesktopconf_DATA = \
	desktop.conf               \
	top-panel.conf             \
	bottom-panel.conf 	   \
	notification-groups.conf


hildonnavigatordesktopentry_DATA = \
	app-switcher.desktop       \
        applications-menu.desktop  \
	switcher-menu.desktop


hildondesktopmenu_DATA = applications.menu

hildondesktopstartup_SCRIPTS = \
        hildon-desktop.sh


ossobackup_SCRIPTS = restore-menu.sh
ossobackupdir = $(sysconfdir)/osso-backup/restore.d/always

bin_SCRIPTS = install_sbapplet.sh

CLEANFILES = *~
subdir = data
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = desktop.conf top-panel.conf bottom-panel.conf \
	home.conf app-switcher.desktop others-button.desktop \
	applications-menu.desktop switcher-menu.desktop
SCRIPTS = $(bin_SCRIPTS) $(hildondesktopstartup_SCRIPTS) \
	$(ossobackup_SCRIPTS)

DIST_SOURCES =
DATA = $(hildondesktopconf_DATA) $(hildondesktopmenu_DATA) \
	$(hildonnavigatordesktopentry_DATA)

DIST_COMMON = $(srcdir)/Makefile.in Makefile.am app-switcher.desktop.in \
	applications-menu.desktop.in bottom-panel.conf.in \
	desktop.conf.in home.conf.in others-button.desktop.in \
	switcher-menu.desktop.in top-panel.conf.in
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  data/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
desktop.conf: $(top_builddir)/config.status desktop.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
top-panel.conf: $(top_builddir)/config.status top-panel.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
bottom-panel.conf: $(top_builddir)/config.status bottom-panel.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
home.conf: $(top_builddir)/config.status home.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
app-switcher.desktop: $(top_builddir)/config.status app-switcher.desktop.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
others-button.desktop: $(top_builddir)/config.status others-button.desktop.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
applications-menu.desktop: $(top_builddir)/config.status applications-menu.desktop.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
switcher-menu.desktop: $(top_builddir)/config.status switcher-menu.desktop.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(bindir)/$$f"; \
	    $(binSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done
hildondesktopstartupSCRIPT_INSTALL = $(INSTALL_SCRIPT)
install-hildondesktopstartupSCRIPTS: $(hildondesktopstartup_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(hildondesktopstartupdir)
	@list='$(hildondesktopstartup_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(hildondesktopstartupSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(hildondesktopstartupdir)/$$f"; \
	    $(hildondesktopstartupSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(hildondesktopstartupdir)/$$f; \
	  else :; fi; \
	done

uninstall-hildondesktopstartupSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(hildondesktopstartup_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f $(DESTDIR)$(hildondesktopstartupdir)/$$f"; \
	  rm -f $(DESTDIR)$(hildondesktopstartupdir)/$$f; \
	done
ossobackupSCRIPT_INSTALL = $(INSTALL_SCRIPT)
install-ossobackupSCRIPTS: $(ossobackup_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(ossobackupdir)
	@list='$(ossobackup_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(ossobackupSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(ossobackupdir)/$$f"; \
	    $(ossobackupSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(ossobackupdir)/$$f; \
	  else :; fi; \
	done

uninstall-ossobackupSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(ossobackup_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f $(DESTDIR)$(ossobackupdir)/$$f"; \
	  rm -f $(DESTDIR)$(ossobackupdir)/$$f; \
	done

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
hildondesktopconfDATA_INSTALL = $(INSTALL_DATA)
install-hildondesktopconfDATA: $(hildondesktopconf_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(hildondesktopconfdir)
	@list='$(hildondesktopconf_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(hildondesktopconfDATA_INSTALL) $$d$$p $(DESTDIR)$(hildondesktopconfdir)/$$f"; \
	  $(hildondesktopconfDATA_INSTALL) $$d$$p $(DESTDIR)$(hildondesktopconfdir)/$$f; \
	done

uninstall-hildondesktopconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(hildondesktopconf_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(hildondesktopconfdir)/$$f"; \
	  rm -f $(DESTDIR)$(hildondesktopconfdir)/$$f; \
	done
hildondesktopmenuDATA_INSTALL = $(INSTALL_DATA)
install-hildondesktopmenuDATA: $(hildondesktopmenu_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(hildondesktopmenudir)
	@list='$(hildondesktopmenu_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(hildondesktopmenuDATA_INSTALL) $$d$$p $(DESTDIR)$(hildondesktopmenudir)/$$f"; \
	  $(hildondesktopmenuDATA_INSTALL) $$d$$p $(DESTDIR)$(hildondesktopmenudir)/$$f; \
	done

uninstall-hildondesktopmenuDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(hildondesktopmenu_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(hildondesktopmenudir)/$$f"; \
	  rm -f $(DESTDIR)$(hildondesktopmenudir)/$$f; \
	done
hildonnavigatordesktopentryDATA_INSTALL = $(INSTALL_DATA)
install-hildonnavigatordesktopentryDATA: $(hildonnavigatordesktopentry_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(hildonnavigatordesktopentrydir)
	@list='$(hildonnavigatordesktopentry_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(hildonnavigatordesktopentryDATA_INSTALL) $$d$$p $(DESTDIR)$(hildonnavigatordesktopentrydir)/$$f"; \
	  $(hildonnavigatordesktopentryDATA_INSTALL) $$d$$p $(DESTDIR)$(hildonnavigatordesktopentrydir)/$$f; \
	done

uninstall-hildonnavigatordesktopentryDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(hildonnavigatordesktopentry_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(hildonnavigatordesktopentrydir)/$$f"; \
	  rm -f $(DESTDIR)$(hildonnavigatordesktopentrydir)/$$f; \
	done
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(SCRIPTS) $(DATA)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(hildondesktopstartupdir) $(DESTDIR)$(ossobackupdir) $(DESTDIR)$(hildondesktopconfdir) $(DESTDIR)$(hildondesktopmenudir) $(DESTDIR)$(hildonnavigatordesktopentrydir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-libtool

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-hildondesktopconfDATA \
	install-hildondesktopmenuDATA \
	install-hildondesktopstartupSCRIPTS \
	install-hildonnavigatordesktopentryDATA \
	install-ossobackupSCRIPTS

install-exec-am: install-binSCRIPTS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binSCRIPTS uninstall-hildondesktopconfDATA \
	uninstall-hildondesktopmenuDATA \
	uninstall-hildondesktopstartupSCRIPTS \
	uninstall-hildonnavigatordesktopentryDATA uninstall-info-am \
	uninstall-ossobackupSCRIPTS

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	distclean distclean-generic distclean-libtool distdir dvi \
	dvi-am info info-am install install-am install-binSCRIPTS \
	install-data install-data-am install-exec install-exec-am \
	install-hildondesktopconfDATA install-hildondesktopmenuDATA \
	install-hildondesktopstartupSCRIPTS \
	install-hildonnavigatordesktopentryDATA install-info \
	install-info-am install-man install-ossobackupSCRIPTS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	uninstall uninstall-am uninstall-binSCRIPTS \
	uninstall-hildondesktopconfDATA uninstall-hildondesktopmenuDATA \
	uninstall-hildondesktopstartupSCRIPTS \
	uninstall-hildonnavigatordesktopentryDATA uninstall-info-am \
	uninstall-ossobackupSCRIPTS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
