# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/hildon-theme-tools
pkglibdir = $(libdir)/hildon-theme-tools
pkgincludedir = $(includedir)/hildon-theme-tools
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /home/bruce/bin/install-check
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = hildon-theme-slicer$(EXEEXT) \
	hildon-theme-colourizer$(EXEEXT) \
	hildon-theme-regenerator$(EXEEXT) \
	hildon-theme-outliner$(EXEEXT)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_hildon_theme_colourizer_OBJECTS =  \
	hildon_theme_colourizer-colourizer.$(OBJEXT) \
	hildon_theme_colourizer-common.$(OBJEXT)
hildon_theme_colourizer_OBJECTS =  \
	$(am_hildon_theme_colourizer_OBJECTS)
am__DEPENDENCIES_1 =
hildon_theme_colourizer_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_hildon_theme_outliner_OBJECTS =  \
	hildon_theme_outliner-outliner.$(OBJEXT) \
	hildon_theme_outliner-common.$(OBJEXT)
hildon_theme_outliner_OBJECTS = $(am_hildon_theme_outliner_OBJECTS)
hildon_theme_outliner_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_hildon_theme_regenerator_OBJECTS =  \
	hildon_theme_regenerator-regenerator.$(OBJEXT) \
	hildon_theme_regenerator-common.$(OBJEXT)
hildon_theme_regenerator_OBJECTS =  \
	$(am_hildon_theme_regenerator_OBJECTS)
hildon_theme_regenerator_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_hildon_theme_slicer_OBJECTS = hildon_theme_slicer-slicer.$(OBJEXT) \
	hildon_theme_slicer-common.$(OBJEXT)
hildon_theme_slicer_OBJECTS = $(am_hildon_theme_slicer_OBJECTS)
hildon_theme_slicer_DEPENDENCIES = $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(hildon_theme_colourizer_SOURCES) \
	$(hildon_theme_outliner_SOURCES) \
	$(hildon_theme_regenerator_SOURCES) \
	$(hildon_theme_slicer_SOURCES)
DIST_SOURCES = $(hildon_theme_colourizer_SOURCES) \
	$(hildon_theme_outliner_SOURCES) \
	$(hildon_theme_regenerator_SOURCES) \
	$(hildon_theme_slicer_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/bruce/code/hildon/hildon-theme-tools/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/bruce/code/hildon/hildon-theme-tools/missing --run tar
AUTOCONF = ${SHELL} /home/bruce/code/hildon/hildon-theme-tools/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bruce/code/hildon/hildon-theme-tools/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bruce/code/hildon/hildon-theme-tools/missing --run automake-1.9
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wmissing-prototypes -Wmissing-declarations
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
GTK_VERSION = 2.6.4
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = -L/opt/hildon/lib 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/bruce/code/hildon/hildon-theme-tools/missing --run makeinfo
OBJEXT = o
PACKAGE = hildon-theme-tools
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.5.2
ac_ct_CC = gcc
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/bruce/code/hildon/hildon-theme-tools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/hildon
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

# Slicer
hildon_theme_slicer_CFLAGS = $(GTK_CFLAGS)
hildon_theme_slicer_LDADD = $(GTK_LIBS)
hildon_theme_slicer_SOURCES = slicer.c common.c

# Colourizer
hildon_theme_colourizer_CFLAGS = $(GTK_CFLAGS)
hildon_theme_colourizer_LDADD = $(GTK_LIBS)
hildon_theme_colourizer_SOURCES = colourizer.c common.c

# Regenerator
hildon_theme_regenerator_CFLAGS = $(GTK_CFLAGS)
hildon_theme_regenerator_LDADD = $(GTK_LIBS)
hildon_theme_regenerator_SOURCES = regenerator.c common.c

# Outliner
hildon_theme_outliner_CFLAGS = $(GTK_CFLAGS)
hildon_theme_outliner_LDADD = $(GTK_LIBS)
hildon_theme_outliner_SOURCES = outliner.c common.c
MAINTAINERCLEANFILES = Makefile.in
noinst_HEADERS = common.h 			\
					  colourizer.h			\
					  regenerator.h			\
					  outliner.h			\
					  slicer.h

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
hildon-theme-colourizer$(EXEEXT): $(hildon_theme_colourizer_OBJECTS) $(hildon_theme_colourizer_DEPENDENCIES) 
	@rm -f hildon-theme-colourizer$(EXEEXT)
	$(LINK) $(hildon_theme_colourizer_LDFLAGS) $(hildon_theme_colourizer_OBJECTS) $(hildon_theme_colourizer_LDADD) $(LIBS)
hildon-theme-outliner$(EXEEXT): $(hildon_theme_outliner_OBJECTS) $(hildon_theme_outliner_DEPENDENCIES) 
	@rm -f hildon-theme-outliner$(EXEEXT)
	$(LINK) $(hildon_theme_outliner_LDFLAGS) $(hildon_theme_outliner_OBJECTS) $(hildon_theme_outliner_LDADD) $(LIBS)
hildon-theme-regenerator$(EXEEXT): $(hildon_theme_regenerator_OBJECTS) $(hildon_theme_regenerator_DEPENDENCIES) 
	@rm -f hildon-theme-regenerator$(EXEEXT)
	$(LINK) $(hildon_theme_regenerator_LDFLAGS) $(hildon_theme_regenerator_OBJECTS) $(hildon_theme_regenerator_LDADD) $(LIBS)
hildon-theme-slicer$(EXEEXT): $(hildon_theme_slicer_OBJECTS) $(hildon_theme_slicer_DEPENDENCIES) 
	@rm -f hildon-theme-slicer$(EXEEXT)
	$(LINK) $(hildon_theme_slicer_LDFLAGS) $(hildon_theme_slicer_OBJECTS) $(hildon_theme_slicer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/hildon_theme_colourizer-colourizer.Po
include ./$(DEPDIR)/hildon_theme_colourizer-common.Po
include ./$(DEPDIR)/hildon_theme_outliner-common.Po
include ./$(DEPDIR)/hildon_theme_outliner-outliner.Po
include ./$(DEPDIR)/hildon_theme_regenerator-common.Po
include ./$(DEPDIR)/hildon_theme_regenerator-regenerator.Po
include ./$(DEPDIR)/hildon_theme_slicer-common.Po
include ./$(DEPDIR)/hildon_theme_slicer-slicer.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

hildon_theme_colourizer-colourizer.o: colourizer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_colourizer_CFLAGS) $(CFLAGS) -MT hildon_theme_colourizer-colourizer.o -MD -MP -MF "$(DEPDIR)/hildon_theme_colourizer-colourizer.Tpo" -c -o hildon_theme_colourizer-colourizer.o `test -f 'colourizer.c' || echo '$(srcdir)/'`colourizer.c; \
	then mv -f "$(DEPDIR)/hildon_theme_colourizer-colourizer.Tpo" "$(DEPDIR)/hildon_theme_colourizer-colourizer.Po"; else rm -f "$(DEPDIR)/hildon_theme_colourizer-colourizer.Tpo"; exit 1; fi
#	source='colourizer.c' object='hildon_theme_colourizer-colourizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_colourizer_CFLAGS) $(CFLAGS) -c -o hildon_theme_colourizer-colourizer.o `test -f 'colourizer.c' || echo '$(srcdir)/'`colourizer.c

hildon_theme_colourizer-colourizer.obj: colourizer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_colourizer_CFLAGS) $(CFLAGS) -MT hildon_theme_colourizer-colourizer.obj -MD -MP -MF "$(DEPDIR)/hildon_theme_colourizer-colourizer.Tpo" -c -o hildon_theme_colourizer-colourizer.obj `if test -f 'colourizer.c'; then $(CYGPATH_W) 'colourizer.c'; else $(CYGPATH_W) '$(srcdir)/colourizer.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_theme_colourizer-colourizer.Tpo" "$(DEPDIR)/hildon_theme_colourizer-colourizer.Po"; else rm -f "$(DEPDIR)/hildon_theme_colourizer-colourizer.Tpo"; exit 1; fi
#	source='colourizer.c' object='hildon_theme_colourizer-colourizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_colourizer_CFLAGS) $(CFLAGS) -c -o hildon_theme_colourizer-colourizer.obj `if test -f 'colourizer.c'; then $(CYGPATH_W) 'colourizer.c'; else $(CYGPATH_W) '$(srcdir)/colourizer.c'; fi`

hildon_theme_colourizer-common.o: common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_colourizer_CFLAGS) $(CFLAGS) -MT hildon_theme_colourizer-common.o -MD -MP -MF "$(DEPDIR)/hildon_theme_colourizer-common.Tpo" -c -o hildon_theme_colourizer-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c; \
	then mv -f "$(DEPDIR)/hildon_theme_colourizer-common.Tpo" "$(DEPDIR)/hildon_theme_colourizer-common.Po"; else rm -f "$(DEPDIR)/hildon_theme_colourizer-common.Tpo"; exit 1; fi
#	source='common.c' object='hildon_theme_colourizer-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_colourizer_CFLAGS) $(CFLAGS) -c -o hildon_theme_colourizer-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

hildon_theme_colourizer-common.obj: common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_colourizer_CFLAGS) $(CFLAGS) -MT hildon_theme_colourizer-common.obj -MD -MP -MF "$(DEPDIR)/hildon_theme_colourizer-common.Tpo" -c -o hildon_theme_colourizer-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_theme_colourizer-common.Tpo" "$(DEPDIR)/hildon_theme_colourizer-common.Po"; else rm -f "$(DEPDIR)/hildon_theme_colourizer-common.Tpo"; exit 1; fi
#	source='common.c' object='hildon_theme_colourizer-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_colourizer_CFLAGS) $(CFLAGS) -c -o hildon_theme_colourizer-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

hildon_theme_outliner-outliner.o: outliner.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_outliner_CFLAGS) $(CFLAGS) -MT hildon_theme_outliner-outliner.o -MD -MP -MF "$(DEPDIR)/hildon_theme_outliner-outliner.Tpo" -c -o hildon_theme_outliner-outliner.o `test -f 'outliner.c' || echo '$(srcdir)/'`outliner.c; \
	then mv -f "$(DEPDIR)/hildon_theme_outliner-outliner.Tpo" "$(DEPDIR)/hildon_theme_outliner-outliner.Po"; else rm -f "$(DEPDIR)/hildon_theme_outliner-outliner.Tpo"; exit 1; fi
#	source='outliner.c' object='hildon_theme_outliner-outliner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_outliner_CFLAGS) $(CFLAGS) -c -o hildon_theme_outliner-outliner.o `test -f 'outliner.c' || echo '$(srcdir)/'`outliner.c

hildon_theme_outliner-outliner.obj: outliner.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_outliner_CFLAGS) $(CFLAGS) -MT hildon_theme_outliner-outliner.obj -MD -MP -MF "$(DEPDIR)/hildon_theme_outliner-outliner.Tpo" -c -o hildon_theme_outliner-outliner.obj `if test -f 'outliner.c'; then $(CYGPATH_W) 'outliner.c'; else $(CYGPATH_W) '$(srcdir)/outliner.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_theme_outliner-outliner.Tpo" "$(DEPDIR)/hildon_theme_outliner-outliner.Po"; else rm -f "$(DEPDIR)/hildon_theme_outliner-outliner.Tpo"; exit 1; fi
#	source='outliner.c' object='hildon_theme_outliner-outliner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_outliner_CFLAGS) $(CFLAGS) -c -o hildon_theme_outliner-outliner.obj `if test -f 'outliner.c'; then $(CYGPATH_W) 'outliner.c'; else $(CYGPATH_W) '$(srcdir)/outliner.c'; fi`

hildon_theme_outliner-common.o: common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_outliner_CFLAGS) $(CFLAGS) -MT hildon_theme_outliner-common.o -MD -MP -MF "$(DEPDIR)/hildon_theme_outliner-common.Tpo" -c -o hildon_theme_outliner-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c; \
	then mv -f "$(DEPDIR)/hildon_theme_outliner-common.Tpo" "$(DEPDIR)/hildon_theme_outliner-common.Po"; else rm -f "$(DEPDIR)/hildon_theme_outliner-common.Tpo"; exit 1; fi
#	source='common.c' object='hildon_theme_outliner-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_outliner_CFLAGS) $(CFLAGS) -c -o hildon_theme_outliner-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

hildon_theme_outliner-common.obj: common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_outliner_CFLAGS) $(CFLAGS) -MT hildon_theme_outliner-common.obj -MD -MP -MF "$(DEPDIR)/hildon_theme_outliner-common.Tpo" -c -o hildon_theme_outliner-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_theme_outliner-common.Tpo" "$(DEPDIR)/hildon_theme_outliner-common.Po"; else rm -f "$(DEPDIR)/hildon_theme_outliner-common.Tpo"; exit 1; fi
#	source='common.c' object='hildon_theme_outliner-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_outliner_CFLAGS) $(CFLAGS) -c -o hildon_theme_outliner-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

hildon_theme_regenerator-regenerator.o: regenerator.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_regenerator_CFLAGS) $(CFLAGS) -MT hildon_theme_regenerator-regenerator.o -MD -MP -MF "$(DEPDIR)/hildon_theme_regenerator-regenerator.Tpo" -c -o hildon_theme_regenerator-regenerator.o `test -f 'regenerator.c' || echo '$(srcdir)/'`regenerator.c; \
	then mv -f "$(DEPDIR)/hildon_theme_regenerator-regenerator.Tpo" "$(DEPDIR)/hildon_theme_regenerator-regenerator.Po"; else rm -f "$(DEPDIR)/hildon_theme_regenerator-regenerator.Tpo"; exit 1; fi
#	source='regenerator.c' object='hildon_theme_regenerator-regenerator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_regenerator_CFLAGS) $(CFLAGS) -c -o hildon_theme_regenerator-regenerator.o `test -f 'regenerator.c' || echo '$(srcdir)/'`regenerator.c

hildon_theme_regenerator-regenerator.obj: regenerator.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_regenerator_CFLAGS) $(CFLAGS) -MT hildon_theme_regenerator-regenerator.obj -MD -MP -MF "$(DEPDIR)/hildon_theme_regenerator-regenerator.Tpo" -c -o hildon_theme_regenerator-regenerator.obj `if test -f 'regenerator.c'; then $(CYGPATH_W) 'regenerator.c'; else $(CYGPATH_W) '$(srcdir)/regenerator.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_theme_regenerator-regenerator.Tpo" "$(DEPDIR)/hildon_theme_regenerator-regenerator.Po"; else rm -f "$(DEPDIR)/hildon_theme_regenerator-regenerator.Tpo"; exit 1; fi
#	source='regenerator.c' object='hildon_theme_regenerator-regenerator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_regenerator_CFLAGS) $(CFLAGS) -c -o hildon_theme_regenerator-regenerator.obj `if test -f 'regenerator.c'; then $(CYGPATH_W) 'regenerator.c'; else $(CYGPATH_W) '$(srcdir)/regenerator.c'; fi`

hildon_theme_regenerator-common.o: common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_regenerator_CFLAGS) $(CFLAGS) -MT hildon_theme_regenerator-common.o -MD -MP -MF "$(DEPDIR)/hildon_theme_regenerator-common.Tpo" -c -o hildon_theme_regenerator-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c; \
	then mv -f "$(DEPDIR)/hildon_theme_regenerator-common.Tpo" "$(DEPDIR)/hildon_theme_regenerator-common.Po"; else rm -f "$(DEPDIR)/hildon_theme_regenerator-common.Tpo"; exit 1; fi
#	source='common.c' object='hildon_theme_regenerator-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_regenerator_CFLAGS) $(CFLAGS) -c -o hildon_theme_regenerator-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

hildon_theme_regenerator-common.obj: common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_regenerator_CFLAGS) $(CFLAGS) -MT hildon_theme_regenerator-common.obj -MD -MP -MF "$(DEPDIR)/hildon_theme_regenerator-common.Tpo" -c -o hildon_theme_regenerator-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_theme_regenerator-common.Tpo" "$(DEPDIR)/hildon_theme_regenerator-common.Po"; else rm -f "$(DEPDIR)/hildon_theme_regenerator-common.Tpo"; exit 1; fi
#	source='common.c' object='hildon_theme_regenerator-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_regenerator_CFLAGS) $(CFLAGS) -c -o hildon_theme_regenerator-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

hildon_theme_slicer-slicer.o: slicer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_slicer_CFLAGS) $(CFLAGS) -MT hildon_theme_slicer-slicer.o -MD -MP -MF "$(DEPDIR)/hildon_theme_slicer-slicer.Tpo" -c -o hildon_theme_slicer-slicer.o `test -f 'slicer.c' || echo '$(srcdir)/'`slicer.c; \
	then mv -f "$(DEPDIR)/hildon_theme_slicer-slicer.Tpo" "$(DEPDIR)/hildon_theme_slicer-slicer.Po"; else rm -f "$(DEPDIR)/hildon_theme_slicer-slicer.Tpo"; exit 1; fi
#	source='slicer.c' object='hildon_theme_slicer-slicer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_slicer_CFLAGS) $(CFLAGS) -c -o hildon_theme_slicer-slicer.o `test -f 'slicer.c' || echo '$(srcdir)/'`slicer.c

hildon_theme_slicer-slicer.obj: slicer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_slicer_CFLAGS) $(CFLAGS) -MT hildon_theme_slicer-slicer.obj -MD -MP -MF "$(DEPDIR)/hildon_theme_slicer-slicer.Tpo" -c -o hildon_theme_slicer-slicer.obj `if test -f 'slicer.c'; then $(CYGPATH_W) 'slicer.c'; else $(CYGPATH_W) '$(srcdir)/slicer.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_theme_slicer-slicer.Tpo" "$(DEPDIR)/hildon_theme_slicer-slicer.Po"; else rm -f "$(DEPDIR)/hildon_theme_slicer-slicer.Tpo"; exit 1; fi
#	source='slicer.c' object='hildon_theme_slicer-slicer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_slicer_CFLAGS) $(CFLAGS) -c -o hildon_theme_slicer-slicer.obj `if test -f 'slicer.c'; then $(CYGPATH_W) 'slicer.c'; else $(CYGPATH_W) '$(srcdir)/slicer.c'; fi`

hildon_theme_slicer-common.o: common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_slicer_CFLAGS) $(CFLAGS) -MT hildon_theme_slicer-common.o -MD -MP -MF "$(DEPDIR)/hildon_theme_slicer-common.Tpo" -c -o hildon_theme_slicer-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c; \
	then mv -f "$(DEPDIR)/hildon_theme_slicer-common.Tpo" "$(DEPDIR)/hildon_theme_slicer-common.Po"; else rm -f "$(DEPDIR)/hildon_theme_slicer-common.Tpo"; exit 1; fi
#	source='common.c' object='hildon_theme_slicer-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_slicer_CFLAGS) $(CFLAGS) -c -o hildon_theme_slicer-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

hildon_theme_slicer-common.obj: common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_slicer_CFLAGS) $(CFLAGS) -MT hildon_theme_slicer-common.obj -MD -MP -MF "$(DEPDIR)/hildon_theme_slicer-common.Tpo" -c -o hildon_theme_slicer-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`; \
	then mv -f "$(DEPDIR)/hildon_theme_slicer-common.Tpo" "$(DEPDIR)/hildon_theme_slicer-common.Po"; else rm -f "$(DEPDIR)/hildon_theme_slicer-common.Tpo"; exit 1; fi
#	source='common.c' object='hildon_theme_slicer-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hildon_theme_slicer_CFLAGS) $(CFLAGS) -c -o hildon_theme_slicer-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
